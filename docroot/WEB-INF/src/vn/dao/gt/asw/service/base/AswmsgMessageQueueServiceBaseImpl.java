/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dao.gt.asw.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.base.PrincipalBean;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import vn.dao.gt.asw.model.AswmsgMessageQueue;
import vn.dao.gt.asw.service.AswmsgMessageQueueLocalService;
import vn.dao.gt.asw.service.AswmsgMessageQueueService;
import vn.dao.gt.asw.service.MonitorMessageQueueLocalService;
import vn.dao.gt.asw.service.MonitorMessageQueueService;
import vn.dao.gt.asw.service.persistence.AswmsgMessageQueueFinder;
import vn.dao.gt.asw.service.persistence.AswmsgMessageQueuePersistence;
import vn.dao.gt.asw.service.persistence.MonitorMessageQueuePersistence;

import javax.sql.DataSource;

/**
 * The base implementation of the aswmsg message queue remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link vn.dao.gt.asw.service.impl.AswmsgMessageQueueServiceImpl}.
 * </p>
 *
 * @author win 64
 * @see vn.dao.gt.asw.service.impl.AswmsgMessageQueueServiceImpl
 * @see vn.dao.gt.asw.service.AswmsgMessageQueueServiceUtil
 * @generated
 */
public abstract class AswmsgMessageQueueServiceBaseImpl extends PrincipalBean
	implements AswmsgMessageQueueService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link vn.dao.gt.asw.service.AswmsgMessageQueueServiceUtil} to access the aswmsg message queue remote service.
	 */

	/**
	 * Returns the aswmsg message queue local service.
	 *
	 * @return the aswmsg message queue local service
	 */
	public AswmsgMessageQueueLocalService getAswmsgMessageQueueLocalService() {
		return aswmsgMessageQueueLocalService;
	}

	/**
	 * Sets the aswmsg message queue local service.
	 *
	 * @param aswmsgMessageQueueLocalService the aswmsg message queue local service
	 */
	public void setAswmsgMessageQueueLocalService(
		AswmsgMessageQueueLocalService aswmsgMessageQueueLocalService) {
		this.aswmsgMessageQueueLocalService = aswmsgMessageQueueLocalService;
	}

	/**
	 * Returns the aswmsg message queue remote service.
	 *
	 * @return the aswmsg message queue remote service
	 */
	public AswmsgMessageQueueService getAswmsgMessageQueueService() {
		return aswmsgMessageQueueService;
	}

	/**
	 * Sets the aswmsg message queue remote service.
	 *
	 * @param aswmsgMessageQueueService the aswmsg message queue remote service
	 */
	public void setAswmsgMessageQueueService(
		AswmsgMessageQueueService aswmsgMessageQueueService) {
		this.aswmsgMessageQueueService = aswmsgMessageQueueService;
	}

	/**
	 * Returns the aswmsg message queue persistence.
	 *
	 * @return the aswmsg message queue persistence
	 */
	public AswmsgMessageQueuePersistence getAswmsgMessageQueuePersistence() {
		return aswmsgMessageQueuePersistence;
	}

	/**
	 * Sets the aswmsg message queue persistence.
	 *
	 * @param aswmsgMessageQueuePersistence the aswmsg message queue persistence
	 */
	public void setAswmsgMessageQueuePersistence(
		AswmsgMessageQueuePersistence aswmsgMessageQueuePersistence) {
		this.aswmsgMessageQueuePersistence = aswmsgMessageQueuePersistence;
	}

	/**
	 * Returns the aswmsg message queue finder.
	 *
	 * @return the aswmsg message queue finder
	 */
	public AswmsgMessageQueueFinder getAswmsgMessageQueueFinder() {
		return aswmsgMessageQueueFinder;
	}

	/**
	 * Sets the aswmsg message queue finder.
	 *
	 * @param aswmsgMessageQueueFinder the aswmsg message queue finder
	 */
	public void setAswmsgMessageQueueFinder(
		AswmsgMessageQueueFinder aswmsgMessageQueueFinder) {
		this.aswmsgMessageQueueFinder = aswmsgMessageQueueFinder;
	}

	/**
	 * Returns the monitor message queue local service.
	 *
	 * @return the monitor message queue local service
	 */
	public MonitorMessageQueueLocalService getMonitorMessageQueueLocalService() {
		return monitorMessageQueueLocalService;
	}

	/**
	 * Sets the monitor message queue local service.
	 *
	 * @param monitorMessageQueueLocalService the monitor message queue local service
	 */
	public void setMonitorMessageQueueLocalService(
		MonitorMessageQueueLocalService monitorMessageQueueLocalService) {
		this.monitorMessageQueueLocalService = monitorMessageQueueLocalService;
	}

	/**
	 * Returns the monitor message queue remote service.
	 *
	 * @return the monitor message queue remote service
	 */
	public MonitorMessageQueueService getMonitorMessageQueueService() {
		return monitorMessageQueueService;
	}

	/**
	 * Sets the monitor message queue remote service.
	 *
	 * @param monitorMessageQueueService the monitor message queue remote service
	 */
	public void setMonitorMessageQueueService(
		MonitorMessageQueueService monitorMessageQueueService) {
		this.monitorMessageQueueService = monitorMessageQueueService;
	}

	/**
	 * Returns the monitor message queue persistence.
	 *
	 * @return the monitor message queue persistence
	 */
	public MonitorMessageQueuePersistence getMonitorMessageQueuePersistence() {
		return monitorMessageQueuePersistence;
	}

	/**
	 * Sets the monitor message queue persistence.
	 *
	 * @param monitorMessageQueuePersistence the monitor message queue persistence
	 */
	public void setMonitorMessageQueuePersistence(
		MonitorMessageQueuePersistence monitorMessageQueuePersistence) {
		this.monitorMessageQueuePersistence = monitorMessageQueuePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Returns the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	protected Class<?> getModelClass() {
		return AswmsgMessageQueue.class;
	}

	protected String getModelClassName() {
		return AswmsgMessageQueue.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = aswmsgMessageQueuePersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = AswmsgMessageQueueLocalService.class)
	protected AswmsgMessageQueueLocalService aswmsgMessageQueueLocalService;
	@BeanReference(type = AswmsgMessageQueueService.class)
	protected AswmsgMessageQueueService aswmsgMessageQueueService;
	@BeanReference(type = AswmsgMessageQueuePersistence.class)
	protected AswmsgMessageQueuePersistence aswmsgMessageQueuePersistence;
	@BeanReference(type = AswmsgMessageQueueFinder.class)
	protected AswmsgMessageQueueFinder aswmsgMessageQueueFinder;
	@BeanReference(type = MonitorMessageQueueLocalService.class)
	protected MonitorMessageQueueLocalService monitorMessageQueueLocalService;
	@BeanReference(type = MonitorMessageQueueService.class)
	protected MonitorMessageQueueService monitorMessageQueueService;
	@BeanReference(type = MonitorMessageQueuePersistence.class)
	protected MonitorMessageQueuePersistence monitorMessageQueuePersistence;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
}
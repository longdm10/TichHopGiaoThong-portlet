/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dao.gt.asw.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dao.gt.asw.model.MonitorMessageQueue;
import vn.dao.gt.asw.model.MonitorMessageQueueModel;
import vn.dao.gt.asw.model.MonitorMessageQueueSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * The base model implementation for the MonitorMessageQueue service. Represents a row in the &quot;aswmsg_messagequeue&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dao.gt.asw.model.MonitorMessageQueueModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MonitorMessageQueueImpl}.
 * </p>
 *
 * @author win 64
 * @see MonitorMessageQueueImpl
 * @see vn.dao.gt.asw.model.MonitorMessageQueue
 * @see vn.dao.gt.asw.model.MonitorMessageQueueModel
 * @generated
 */
@JSON(strict = true)
public class MonitorMessageQueueModelImpl extends BaseModelImpl<MonitorMessageQueue>
	implements MonitorMessageQueueModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a monitor message queue model instance should use the {@link vn.dao.gt.asw.model.MonitorMessageQueue} interface instead.
	 */
	public static final String TABLE_NAME = "aswmsg_messagequeue";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "version", Types.VARCHAR },
			{ "messageId", Types.VARCHAR },
			{ "sendername", Types.VARCHAR },
			{ "senderidentity", Types.VARCHAR },
			{ "sendercountrycode", Types.VARCHAR },
			{ "senderministrycode", Types.VARCHAR },
			{ "senderorganizationcode", Types.VARCHAR },
			{ "senderunitcode", Types.VARCHAR },
			{ "receivername", Types.VARCHAR },
			{ "receiveridentity", Types.VARCHAR },
			{ "receivercountrycode", Types.VARCHAR },
			{ "receiverministrycode", Types.VARCHAR },
			{ "receiverorganizationcode", Types.VARCHAR },
			{ "receiverunitcode", Types.VARCHAR },
			{ "documenttype", Types.VARCHAR },
			{ "type", Types.INTEGER },
			{ "function", Types.VARCHAR },
			{ "reference", Types.BIGINT },
			{ "prereference", Types.BIGINT },
			{ "documentyear", Types.INTEGER },
			{ "senddate", Types.TIMESTAMP },
			{ "createdtime", Types.TIMESTAMP },
			{ "webservice", Types.INTEGER },
			{ "validated", Types.INTEGER },
			{ "priority", Types.INTEGER },
			{ "description", Types.VARCHAR },
			{ "validationcode", Types.VARCHAR },
			{ "solangui", Types.INTEGER },
			{ "hoSoThuTucId", Types.BIGINT },
			{ "phieuXuLyPhuId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table aswmsg_messagequeue (id LONG not null primary key,version VARCHAR(75) null,messageId VARCHAR(75) null,sendername VARCHAR(75) null,senderidentity VARCHAR(75) null,sendercountrycode VARCHAR(75) null,senderministrycode VARCHAR(75) null,senderorganizationcode VARCHAR(75) null,senderunitcode VARCHAR(75) null,receivername VARCHAR(75) null,receiveridentity VARCHAR(75) null,receivercountrycode VARCHAR(75) null,receiverministrycode VARCHAR(75) null,receiverorganizationcode VARCHAR(75) null,receiverunitcode VARCHAR(75) null,documenttype VARCHAR(75) null,type INTEGER,function VARCHAR(75) null,reference LONG,prereference LONG,documentyear INTEGER,senddate DATE null,createdtime DATE null,webservice INTEGER,validated INTEGER,priority INTEGER,description VARCHAR(75) null,validationcode VARCHAR(75) null,solangui INTEGER,hoSoThuTucId LONG,phieuXuLyPhuId LONG)";
	public static final String TABLE_SQL_DROP = "drop table aswmsg_messagequeue";
	public static final String ORDER_BY_JPQL = " ORDER BY monitorMessageQueue.priority DESC";
	public static final String ORDER_BY_SQL = " ORDER BY aswmsg_messagequeue.priority DESC";
	public static final String DATA_SOURCE = "gtDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dao.gt.asw.model.MonitorMessageQueue"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dao.gt.asw.model.MonitorMessageQueue"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dao.gt.asw.model.MonitorMessageQueue"),
			true);
	public static long DOCUMENTTYPE_COLUMN_BITMASK = 1L;
	public static long HOSOTHUTUCID_COLUMN_BITMASK = 2L;
	public static long MESSAGEID_COLUMN_BITMASK = 4L;
	public static long PHIEUXULYPHUID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static MonitorMessageQueue toModel(MonitorMessageQueueSoap soapModel) {
		MonitorMessageQueue model = new MonitorMessageQueueImpl();

		model.setId(soapModel.getId());
		model.setVersion(soapModel.getVersion());
		model.setMessageId(soapModel.getMessageId());
		model.setSenderName(soapModel.getSenderName());
		model.setSenderIdentity(soapModel.getSenderIdentity());
		model.setSenderCountryCode(soapModel.getSenderCountryCode());
		model.setSenderMinistryCode(soapModel.getSenderMinistryCode());
		model.setSenderOrganizationCode(soapModel.getSenderOrganizationCode());
		model.setSenderUnitCode(soapModel.getSenderUnitCode());
		model.setReceiverName(soapModel.getReceiverName());
		model.setReceiverIdentity(soapModel.getReceiverIdentity());
		model.setReceiverCountryCode(soapModel.getReceiverCountryCode());
		model.setReceiverMinistryCode(soapModel.getReceiverMinistryCode());
		model.setReceiverOrganizationCode(soapModel.getReceiverOrganizationCode());
		model.setReceiverUnitCode(soapModel.getReceiverUnitCode());
		model.setDocumentType(soapModel.getDocumentType());
		model.setType(soapModel.getType());
		model.setFunction(soapModel.getFunction());
		model.setReference(soapModel.getReference());
		model.setPreReference(soapModel.getPreReference());
		model.setDocumentYear(soapModel.getDocumentYear());
		model.setSendDate(soapModel.getSendDate());
		model.setCreatedTime(soapModel.getCreatedTime());
		model.setWebservice(soapModel.getWebservice());
		model.setValidated(soapModel.getValidated());
		model.setPriority(soapModel.getPriority());
		model.setDescription(soapModel.getDescription());
		model.setValidationCode(soapModel.getValidationCode());
		model.setSoLanGui(soapModel.getSoLanGui());
		model.setHoSoThuTucId(soapModel.getHoSoThuTucId());
		model.setPhieuXuLyPhuId(soapModel.getPhieuXuLyPhuId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<MonitorMessageQueue> toModels(
		MonitorMessageQueueSoap[] soapModels) {
		List<MonitorMessageQueue> models = new ArrayList<MonitorMessageQueue>(soapModels.length);

		for (MonitorMessageQueueSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dao.gt.asw.model.MonitorMessageQueue"));

	public MonitorMessageQueueModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return MonitorMessageQueue.class;
	}

	public String getModelClassName() {
		return MonitorMessageQueue.class.getName();
	}

	@JSON
	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	@JSON
	public String getVersion() {
		if (_version == null) {
			return StringPool.BLANK;
		}
		else {
			return _version;
		}
	}

	public void setVersion(String version) {
		_version = version;
	}

	@JSON
	public String getMessageId() {
		if (_messageId == null) {
			return StringPool.BLANK;
		}
		else {
			return _messageId;
		}
	}

	public void setMessageId(String messageId) {
		_columnBitmask |= MESSAGEID_COLUMN_BITMASK;

		if (_originalMessageId == null) {
			_originalMessageId = _messageId;
		}

		_messageId = messageId;
	}

	public String getOriginalMessageId() {
		return GetterUtil.getString(_originalMessageId);
	}

	@JSON
	public String getSenderName() {
		if (_senderName == null) {
			return StringPool.BLANK;
		}
		else {
			return _senderName;
		}
	}

	public void setSenderName(String senderName) {
		_senderName = senderName;
	}

	@JSON
	public String getSenderIdentity() {
		if (_senderIdentity == null) {
			return StringPool.BLANK;
		}
		else {
			return _senderIdentity;
		}
	}

	public void setSenderIdentity(String senderIdentity) {
		_senderIdentity = senderIdentity;
	}

	@JSON
	public String getSenderCountryCode() {
		if (_senderCountryCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _senderCountryCode;
		}
	}

	public void setSenderCountryCode(String senderCountryCode) {
		_senderCountryCode = senderCountryCode;
	}

	@JSON
	public String getSenderMinistryCode() {
		if (_senderMinistryCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _senderMinistryCode;
		}
	}

	public void setSenderMinistryCode(String senderMinistryCode) {
		_senderMinistryCode = senderMinistryCode;
	}

	@JSON
	public String getSenderOrganizationCode() {
		if (_senderOrganizationCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _senderOrganizationCode;
		}
	}

	public void setSenderOrganizationCode(String senderOrganizationCode) {
		_senderOrganizationCode = senderOrganizationCode;
	}

	@JSON
	public String getSenderUnitCode() {
		if (_senderUnitCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _senderUnitCode;
		}
	}

	public void setSenderUnitCode(String senderUnitCode) {
		_senderUnitCode = senderUnitCode;
	}

	@JSON
	public String getReceiverName() {
		if (_receiverName == null) {
			return StringPool.BLANK;
		}
		else {
			return _receiverName;
		}
	}

	public void setReceiverName(String receiverName) {
		_receiverName = receiverName;
	}

	@JSON
	public String getReceiverIdentity() {
		if (_receiverIdentity == null) {
			return StringPool.BLANK;
		}
		else {
			return _receiverIdentity;
		}
	}

	public void setReceiverIdentity(String receiverIdentity) {
		_receiverIdentity = receiverIdentity;
	}

	@JSON
	public String getReceiverCountryCode() {
		if (_receiverCountryCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _receiverCountryCode;
		}
	}

	public void setReceiverCountryCode(String receiverCountryCode) {
		_receiverCountryCode = receiverCountryCode;
	}

	@JSON
	public String getReceiverMinistryCode() {
		if (_receiverMinistryCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _receiverMinistryCode;
		}
	}

	public void setReceiverMinistryCode(String receiverMinistryCode) {
		_receiverMinistryCode = receiverMinistryCode;
	}

	@JSON
	public String getReceiverOrganizationCode() {
		if (_receiverOrganizationCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _receiverOrganizationCode;
		}
	}

	public void setReceiverOrganizationCode(String receiverOrganizationCode) {
		_receiverOrganizationCode = receiverOrganizationCode;
	}

	@JSON
	public String getReceiverUnitCode() {
		if (_receiverUnitCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _receiverUnitCode;
		}
	}

	public void setReceiverUnitCode(String receiverUnitCode) {
		_receiverUnitCode = receiverUnitCode;
	}

	@JSON
	public String getDocumentType() {
		if (_documentType == null) {
			return StringPool.BLANK;
		}
		else {
			return _documentType;
		}
	}

	public void setDocumentType(String documentType) {
		_columnBitmask |= DOCUMENTTYPE_COLUMN_BITMASK;

		if (_originalDocumentType == null) {
			_originalDocumentType = _documentType;
		}

		_documentType = documentType;
	}

	public String getOriginalDocumentType() {
		return GetterUtil.getString(_originalDocumentType);
	}

	@JSON
	public int getType() {
		return _type;
	}

	public void setType(int type) {
		_type = type;
	}

	@JSON
	public String getFunction() {
		if (_function == null) {
			return StringPool.BLANK;
		}
		else {
			return _function;
		}
	}

	public void setFunction(String function) {
		_function = function;
	}

	@JSON
	public long getReference() {
		return _reference;
	}

	public void setReference(long reference) {
		_reference = reference;
	}

	@JSON
	public long getPreReference() {
		return _preReference;
	}

	public void setPreReference(long preReference) {
		_preReference = preReference;
	}

	@JSON
	public int getDocumentYear() {
		return _documentYear;
	}

	public void setDocumentYear(int documentYear) {
		_documentYear = documentYear;
	}

	@JSON
	public Date getSendDate() {
		return _sendDate;
	}

	public void setSendDate(Date sendDate) {
		_sendDate = sendDate;
	}

	@JSON
	public Date getCreatedTime() {
		return _createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		_createdTime = createdTime;
	}

	@JSON
	public int getWebservice() {
		return _webservice;
	}

	public void setWebservice(int webservice) {
		_webservice = webservice;
	}

	@JSON
	public int getValidated() {
		return _validated;
	}

	public void setValidated(int validated) {
		_validated = validated;
	}

	@JSON
	public int getPriority() {
		return _priority;
	}

	public void setPriority(int priority) {
		_columnBitmask = -1L;

		_priority = priority;
	}

	@JSON
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	public String getValidationCode() {
		if (_validationCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _validationCode;
		}
	}

	public void setValidationCode(String validationCode) {
		_validationCode = validationCode;
	}

	@JSON
	public int getSoLanGui() {
		return _soLanGui;
	}

	public void setSoLanGui(int soLanGui) {
		_soLanGui = soLanGui;
	}

	@JSON
	public long getHoSoThuTucId() {
		return _hoSoThuTucId;
	}

	public void setHoSoThuTucId(long hoSoThuTucId) {
		_columnBitmask |= HOSOTHUTUCID_COLUMN_BITMASK;

		if (!_setOriginalHoSoThuTucId) {
			_setOriginalHoSoThuTucId = true;

			_originalHoSoThuTucId = _hoSoThuTucId;
		}

		_hoSoThuTucId = hoSoThuTucId;
	}

	public long getOriginalHoSoThuTucId() {
		return _originalHoSoThuTucId;
	}

	@JSON
	public long getPhieuXuLyPhuId() {
		return _phieuXuLyPhuId;
	}

	public void setPhieuXuLyPhuId(long phieuXuLyPhuId) {
		_columnBitmask |= PHIEUXULYPHUID_COLUMN_BITMASK;

		if (!_setOriginalPhieuXuLyPhuId) {
			_setOriginalPhieuXuLyPhuId = true;

			_originalPhieuXuLyPhuId = _phieuXuLyPhuId;
		}

		_phieuXuLyPhuId = phieuXuLyPhuId;
	}

	public long getOriginalPhieuXuLyPhuId() {
		return _originalPhieuXuLyPhuId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public MonitorMessageQueue toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (MonitorMessageQueue)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					MonitorMessageQueue.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		MonitorMessageQueueImpl monitorMessageQueueImpl = new MonitorMessageQueueImpl();

		monitorMessageQueueImpl.setId(getId());
		monitorMessageQueueImpl.setVersion(getVersion());
		monitorMessageQueueImpl.setMessageId(getMessageId());
		monitorMessageQueueImpl.setSenderName(getSenderName());
		monitorMessageQueueImpl.setSenderIdentity(getSenderIdentity());
		monitorMessageQueueImpl.setSenderCountryCode(getSenderCountryCode());
		monitorMessageQueueImpl.setSenderMinistryCode(getSenderMinistryCode());
		monitorMessageQueueImpl.setSenderOrganizationCode(getSenderOrganizationCode());
		monitorMessageQueueImpl.setSenderUnitCode(getSenderUnitCode());
		monitorMessageQueueImpl.setReceiverName(getReceiverName());
		monitorMessageQueueImpl.setReceiverIdentity(getReceiverIdentity());
		monitorMessageQueueImpl.setReceiverCountryCode(getReceiverCountryCode());
		monitorMessageQueueImpl.setReceiverMinistryCode(getReceiverMinistryCode());
		monitorMessageQueueImpl.setReceiverOrganizationCode(getReceiverOrganizationCode());
		monitorMessageQueueImpl.setReceiverUnitCode(getReceiverUnitCode());
		monitorMessageQueueImpl.setDocumentType(getDocumentType());
		monitorMessageQueueImpl.setType(getType());
		monitorMessageQueueImpl.setFunction(getFunction());
		monitorMessageQueueImpl.setReference(getReference());
		monitorMessageQueueImpl.setPreReference(getPreReference());
		monitorMessageQueueImpl.setDocumentYear(getDocumentYear());
		monitorMessageQueueImpl.setSendDate(getSendDate());
		monitorMessageQueueImpl.setCreatedTime(getCreatedTime());
		monitorMessageQueueImpl.setWebservice(getWebservice());
		monitorMessageQueueImpl.setValidated(getValidated());
		monitorMessageQueueImpl.setPriority(getPriority());
		monitorMessageQueueImpl.setDescription(getDescription());
		monitorMessageQueueImpl.setValidationCode(getValidationCode());
		monitorMessageQueueImpl.setSoLanGui(getSoLanGui());
		monitorMessageQueueImpl.setHoSoThuTucId(getHoSoThuTucId());
		monitorMessageQueueImpl.setPhieuXuLyPhuId(getPhieuXuLyPhuId());

		monitorMessageQueueImpl.resetOriginalValues();

		return monitorMessageQueueImpl;
	}

	public int compareTo(MonitorMessageQueue monitorMessageQueue) {
		int value = 0;

		if (getPriority() < monitorMessageQueue.getPriority()) {
			value = -1;
		}
		else if (getPriority() > monitorMessageQueue.getPriority()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		MonitorMessageQueue monitorMessageQueue = null;

		try {
			monitorMessageQueue = (MonitorMessageQueue)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = monitorMessageQueue.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		MonitorMessageQueueModelImpl monitorMessageQueueModelImpl = this;

		monitorMessageQueueModelImpl._originalMessageId = monitorMessageQueueModelImpl._messageId;

		monitorMessageQueueModelImpl._originalDocumentType = monitorMessageQueueModelImpl._documentType;

		monitorMessageQueueModelImpl._originalHoSoThuTucId = monitorMessageQueueModelImpl._hoSoThuTucId;

		monitorMessageQueueModelImpl._setOriginalHoSoThuTucId = false;

		monitorMessageQueueModelImpl._originalPhieuXuLyPhuId = monitorMessageQueueModelImpl._phieuXuLyPhuId;

		monitorMessageQueueModelImpl._setOriginalPhieuXuLyPhuId = false;

		monitorMessageQueueModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<MonitorMessageQueue> toCacheModel() {
		MonitorMessageQueueCacheModel monitorMessageQueueCacheModel = new MonitorMessageQueueCacheModel();

		monitorMessageQueueCacheModel.id = getId();

		monitorMessageQueueCacheModel.version = getVersion();

		String version = monitorMessageQueueCacheModel.version;

		if ((version != null) && (version.length() == 0)) {
			monitorMessageQueueCacheModel.version = null;
		}

		monitorMessageQueueCacheModel.messageId = getMessageId();

		String messageId = monitorMessageQueueCacheModel.messageId;

		if ((messageId != null) && (messageId.length() == 0)) {
			monitorMessageQueueCacheModel.messageId = null;
		}

		monitorMessageQueueCacheModel.senderName = getSenderName();

		String senderName = monitorMessageQueueCacheModel.senderName;

		if ((senderName != null) && (senderName.length() == 0)) {
			monitorMessageQueueCacheModel.senderName = null;
		}

		monitorMessageQueueCacheModel.senderIdentity = getSenderIdentity();

		String senderIdentity = monitorMessageQueueCacheModel.senderIdentity;

		if ((senderIdentity != null) && (senderIdentity.length() == 0)) {
			monitorMessageQueueCacheModel.senderIdentity = null;
		}

		monitorMessageQueueCacheModel.senderCountryCode = getSenderCountryCode();

		String senderCountryCode = monitorMessageQueueCacheModel.senderCountryCode;

		if ((senderCountryCode != null) && (senderCountryCode.length() == 0)) {
			monitorMessageQueueCacheModel.senderCountryCode = null;
		}

		monitorMessageQueueCacheModel.senderMinistryCode = getSenderMinistryCode();

		String senderMinistryCode = monitorMessageQueueCacheModel.senderMinistryCode;

		if ((senderMinistryCode != null) && (senderMinistryCode.length() == 0)) {
			monitorMessageQueueCacheModel.senderMinistryCode = null;
		}

		monitorMessageQueueCacheModel.senderOrganizationCode = getSenderOrganizationCode();

		String senderOrganizationCode = monitorMessageQueueCacheModel.senderOrganizationCode;

		if ((senderOrganizationCode != null) &&
				(senderOrganizationCode.length() == 0)) {
			monitorMessageQueueCacheModel.senderOrganizationCode = null;
		}

		monitorMessageQueueCacheModel.senderUnitCode = getSenderUnitCode();

		String senderUnitCode = monitorMessageQueueCacheModel.senderUnitCode;

		if ((senderUnitCode != null) && (senderUnitCode.length() == 0)) {
			monitorMessageQueueCacheModel.senderUnitCode = null;
		}

		monitorMessageQueueCacheModel.receiverName = getReceiverName();

		String receiverName = monitorMessageQueueCacheModel.receiverName;

		if ((receiverName != null) && (receiverName.length() == 0)) {
			monitorMessageQueueCacheModel.receiverName = null;
		}

		monitorMessageQueueCacheModel.receiverIdentity = getReceiverIdentity();

		String receiverIdentity = monitorMessageQueueCacheModel.receiverIdentity;

		if ((receiverIdentity != null) && (receiverIdentity.length() == 0)) {
			monitorMessageQueueCacheModel.receiverIdentity = null;
		}

		monitorMessageQueueCacheModel.receiverCountryCode = getReceiverCountryCode();

		String receiverCountryCode = monitorMessageQueueCacheModel.receiverCountryCode;

		if ((receiverCountryCode != null) &&
				(receiverCountryCode.length() == 0)) {
			monitorMessageQueueCacheModel.receiverCountryCode = null;
		}

		monitorMessageQueueCacheModel.receiverMinistryCode = getReceiverMinistryCode();

		String receiverMinistryCode = monitorMessageQueueCacheModel.receiverMinistryCode;

		if ((receiverMinistryCode != null) &&
				(receiverMinistryCode.length() == 0)) {
			monitorMessageQueueCacheModel.receiverMinistryCode = null;
		}

		monitorMessageQueueCacheModel.receiverOrganizationCode = getReceiverOrganizationCode();

		String receiverOrganizationCode = monitorMessageQueueCacheModel.receiverOrganizationCode;

		if ((receiverOrganizationCode != null) &&
				(receiverOrganizationCode.length() == 0)) {
			monitorMessageQueueCacheModel.receiverOrganizationCode = null;
		}

		monitorMessageQueueCacheModel.receiverUnitCode = getReceiverUnitCode();

		String receiverUnitCode = monitorMessageQueueCacheModel.receiverUnitCode;

		if ((receiverUnitCode != null) && (receiverUnitCode.length() == 0)) {
			monitorMessageQueueCacheModel.receiverUnitCode = null;
		}

		monitorMessageQueueCacheModel.documentType = getDocumentType();

		String documentType = monitorMessageQueueCacheModel.documentType;

		if ((documentType != null) && (documentType.length() == 0)) {
			monitorMessageQueueCacheModel.documentType = null;
		}

		monitorMessageQueueCacheModel.type = getType();

		monitorMessageQueueCacheModel.function = getFunction();

		String function = monitorMessageQueueCacheModel.function;

		if ((function != null) && (function.length() == 0)) {
			monitorMessageQueueCacheModel.function = null;
		}

		monitorMessageQueueCacheModel.reference = getReference();

		monitorMessageQueueCacheModel.preReference = getPreReference();

		monitorMessageQueueCacheModel.documentYear = getDocumentYear();

		Date sendDate = getSendDate();

		if (sendDate != null) {
			monitorMessageQueueCacheModel.sendDate = sendDate.getTime();
		}
		else {
			monitorMessageQueueCacheModel.sendDate = Long.MIN_VALUE;
		}

		Date createdTime = getCreatedTime();

		if (createdTime != null) {
			monitorMessageQueueCacheModel.createdTime = createdTime.getTime();
		}
		else {
			monitorMessageQueueCacheModel.createdTime = Long.MIN_VALUE;
		}

		monitorMessageQueueCacheModel.webservice = getWebservice();

		monitorMessageQueueCacheModel.validated = getValidated();

		monitorMessageQueueCacheModel.priority = getPriority();

		monitorMessageQueueCacheModel.description = getDescription();

		String description = monitorMessageQueueCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			monitorMessageQueueCacheModel.description = null;
		}

		monitorMessageQueueCacheModel.validationCode = getValidationCode();

		String validationCode = monitorMessageQueueCacheModel.validationCode;

		if ((validationCode != null) && (validationCode.length() == 0)) {
			monitorMessageQueueCacheModel.validationCode = null;
		}

		monitorMessageQueueCacheModel.soLanGui = getSoLanGui();

		monitorMessageQueueCacheModel.hoSoThuTucId = getHoSoThuTucId();

		monitorMessageQueueCacheModel.phieuXuLyPhuId = getPhieuXuLyPhuId();

		return monitorMessageQueueCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(63);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", version=");
		sb.append(getVersion());
		sb.append(", messageId=");
		sb.append(getMessageId());
		sb.append(", senderName=");
		sb.append(getSenderName());
		sb.append(", senderIdentity=");
		sb.append(getSenderIdentity());
		sb.append(", senderCountryCode=");
		sb.append(getSenderCountryCode());
		sb.append(", senderMinistryCode=");
		sb.append(getSenderMinistryCode());
		sb.append(", senderOrganizationCode=");
		sb.append(getSenderOrganizationCode());
		sb.append(", senderUnitCode=");
		sb.append(getSenderUnitCode());
		sb.append(", receiverName=");
		sb.append(getReceiverName());
		sb.append(", receiverIdentity=");
		sb.append(getReceiverIdentity());
		sb.append(", receiverCountryCode=");
		sb.append(getReceiverCountryCode());
		sb.append(", receiverMinistryCode=");
		sb.append(getReceiverMinistryCode());
		sb.append(", receiverOrganizationCode=");
		sb.append(getReceiverOrganizationCode());
		sb.append(", receiverUnitCode=");
		sb.append(getReceiverUnitCode());
		sb.append(", documentType=");
		sb.append(getDocumentType());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", function=");
		sb.append(getFunction());
		sb.append(", reference=");
		sb.append(getReference());
		sb.append(", preReference=");
		sb.append(getPreReference());
		sb.append(", documentYear=");
		sb.append(getDocumentYear());
		sb.append(", sendDate=");
		sb.append(getSendDate());
		sb.append(", createdTime=");
		sb.append(getCreatedTime());
		sb.append(", webservice=");
		sb.append(getWebservice());
		sb.append(", validated=");
		sb.append(getValidated());
		sb.append(", priority=");
		sb.append(getPriority());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", validationCode=");
		sb.append(getValidationCode());
		sb.append(", soLanGui=");
		sb.append(getSoLanGui());
		sb.append(", hoSoThuTucId=");
		sb.append(getHoSoThuTucId());
		sb.append(", phieuXuLyPhuId=");
		sb.append(getPhieuXuLyPhuId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(97);

		sb.append("<model><model-name>");
		sb.append("vn.dao.gt.asw.model.MonitorMessageQueue");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>version</column-name><column-value><![CDATA[");
		sb.append(getVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>messageId</column-name><column-value><![CDATA[");
		sb.append(getMessageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>senderName</column-name><column-value><![CDATA[");
		sb.append(getSenderName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>senderIdentity</column-name><column-value><![CDATA[");
		sb.append(getSenderIdentity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>senderCountryCode</column-name><column-value><![CDATA[");
		sb.append(getSenderCountryCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>senderMinistryCode</column-name><column-value><![CDATA[");
		sb.append(getSenderMinistryCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>senderOrganizationCode</column-name><column-value><![CDATA[");
		sb.append(getSenderOrganizationCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>senderUnitCode</column-name><column-value><![CDATA[");
		sb.append(getSenderUnitCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receiverName</column-name><column-value><![CDATA[");
		sb.append(getReceiverName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receiverIdentity</column-name><column-value><![CDATA[");
		sb.append(getReceiverIdentity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receiverCountryCode</column-name><column-value><![CDATA[");
		sb.append(getReceiverCountryCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receiverMinistryCode</column-name><column-value><![CDATA[");
		sb.append(getReceiverMinistryCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receiverOrganizationCode</column-name><column-value><![CDATA[");
		sb.append(getReceiverOrganizationCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receiverUnitCode</column-name><column-value><![CDATA[");
		sb.append(getReceiverUnitCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentType</column-name><column-value><![CDATA[");
		sb.append(getDocumentType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>function</column-name><column-value><![CDATA[");
		sb.append(getFunction());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reference</column-name><column-value><![CDATA[");
		sb.append(getReference());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>preReference</column-name><column-value><![CDATA[");
		sb.append(getPreReference());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentYear</column-name><column-value><![CDATA[");
		sb.append(getDocumentYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sendDate</column-name><column-value><![CDATA[");
		sb.append(getSendDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdTime</column-name><column-value><![CDATA[");
		sb.append(getCreatedTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>webservice</column-name><column-value><![CDATA[");
		sb.append(getWebservice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>validated</column-name><column-value><![CDATA[");
		sb.append(getValidated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priority</column-name><column-value><![CDATA[");
		sb.append(getPriority());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>validationCode</column-name><column-value><![CDATA[");
		sb.append(getValidationCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soLanGui</column-name><column-value><![CDATA[");
		sb.append(getSoLanGui());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hoSoThuTucId</column-name><column-value><![CDATA[");
		sb.append(getHoSoThuTucId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phieuXuLyPhuId</column-name><column-value><![CDATA[");
		sb.append(getPhieuXuLyPhuId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = MonitorMessageQueue.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			MonitorMessageQueue.class
		};
	private long _id;
	private String _version;
	private String _messageId;
	private String _originalMessageId;
	private String _senderName;
	private String _senderIdentity;
	private String _senderCountryCode;
	private String _senderMinistryCode;
	private String _senderOrganizationCode;
	private String _senderUnitCode;
	private String _receiverName;
	private String _receiverIdentity;
	private String _receiverCountryCode;
	private String _receiverMinistryCode;
	private String _receiverOrganizationCode;
	private String _receiverUnitCode;
	private String _documentType;
	private String _originalDocumentType;
	private int _type;
	private String _function;
	private long _reference;
	private long _preReference;
	private int _documentYear;
	private Date _sendDate;
	private Date _createdTime;
	private int _webservice;
	private int _validated;
	private int _priority;
	private String _description;
	private String _validationCode;
	private int _soLanGui;
	private long _hoSoThuTucId;
	private long _originalHoSoThuTucId;
	private boolean _setOriginalHoSoThuTucId;
	private long _phieuXuLyPhuId;
	private long _originalPhieuXuLyPhuId;
	private boolean _setOriginalPhieuXuLyPhuId;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private MonitorMessageQueue _escapedModelProxy;
}
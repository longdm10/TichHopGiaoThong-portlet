/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.nhapcanh.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.base.PrincipalBean;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import vn.gt.dao.nhapcanh.model.Document;
import vn.gt.dao.nhapcanh.service.CrewListLocalService;
import vn.gt.dao.nhapcanh.service.CrewListService;
import vn.gt.dao.nhapcanh.service.DocumentGeneralLocalService;
import vn.gt.dao.nhapcanh.service.DocumentGeneralService;
import vn.gt.dao.nhapcanh.service.DocumentLocalService;
import vn.gt.dao.nhapcanh.service.DocumentService;
import vn.gt.dao.nhapcanh.service.PassengerListLocalService;
import vn.gt.dao.nhapcanh.service.PassengerListService;
import vn.gt.dao.nhapcanh.service.ResponseBoLocalService;
import vn.gt.dao.nhapcanh.service.ResponseBoService;
import vn.gt.dao.nhapcanh.service.persistence.CrewListPersistence;
import vn.gt.dao.nhapcanh.service.persistence.DocumentGeneralPersistence;
import vn.gt.dao.nhapcanh.service.persistence.DocumentPersistence;
import vn.gt.dao.nhapcanh.service.persistence.PassengerListPersistence;
import vn.gt.dao.nhapcanh.service.persistence.ResponseBoPersistence;

import javax.sql.DataSource;

/**
 * The base implementation of the document remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link vn.gt.dao.nhapcanh.service.impl.DocumentServiceImpl}.
 * </p>
 *
 * @author win_64
 * @see vn.gt.dao.nhapcanh.service.impl.DocumentServiceImpl
 * @see vn.gt.dao.nhapcanh.service.DocumentServiceUtil
 * @generated
 */
public abstract class DocumentServiceBaseImpl extends PrincipalBean
	implements DocumentService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link vn.gt.dao.nhapcanh.service.DocumentServiceUtil} to access the document remote service.
	 */

	/**
	 * Returns the crew list local service.
	 *
	 * @return the crew list local service
	 */
	public CrewListLocalService getCrewListLocalService() {
		return crewListLocalService;
	}

	/**
	 * Sets the crew list local service.
	 *
	 * @param crewListLocalService the crew list local service
	 */
	public void setCrewListLocalService(
		CrewListLocalService crewListLocalService) {
		this.crewListLocalService = crewListLocalService;
	}

	/**
	 * Returns the crew list remote service.
	 *
	 * @return the crew list remote service
	 */
	public CrewListService getCrewListService() {
		return crewListService;
	}

	/**
	 * Sets the crew list remote service.
	 *
	 * @param crewListService the crew list remote service
	 */
	public void setCrewListService(CrewListService crewListService) {
		this.crewListService = crewListService;
	}

	/**
	 * Returns the crew list persistence.
	 *
	 * @return the crew list persistence
	 */
	public CrewListPersistence getCrewListPersistence() {
		return crewListPersistence;
	}

	/**
	 * Sets the crew list persistence.
	 *
	 * @param crewListPersistence the crew list persistence
	 */
	public void setCrewListPersistence(CrewListPersistence crewListPersistence) {
		this.crewListPersistence = crewListPersistence;
	}

	/**
	 * Returns the document local service.
	 *
	 * @return the document local service
	 */
	public DocumentLocalService getDocumentLocalService() {
		return documentLocalService;
	}

	/**
	 * Sets the document local service.
	 *
	 * @param documentLocalService the document local service
	 */
	public void setDocumentLocalService(
		DocumentLocalService documentLocalService) {
		this.documentLocalService = documentLocalService;
	}

	/**
	 * Returns the document remote service.
	 *
	 * @return the document remote service
	 */
	public DocumentService getDocumentService() {
		return documentService;
	}

	/**
	 * Sets the document remote service.
	 *
	 * @param documentService the document remote service
	 */
	public void setDocumentService(DocumentService documentService) {
		this.documentService = documentService;
	}

	/**
	 * Returns the document persistence.
	 *
	 * @return the document persistence
	 */
	public DocumentPersistence getDocumentPersistence() {
		return documentPersistence;
	}

	/**
	 * Sets the document persistence.
	 *
	 * @param documentPersistence the document persistence
	 */
	public void setDocumentPersistence(DocumentPersistence documentPersistence) {
		this.documentPersistence = documentPersistence;
	}

	/**
	 * Returns the document general local service.
	 *
	 * @return the document general local service
	 */
	public DocumentGeneralLocalService getDocumentGeneralLocalService() {
		return documentGeneralLocalService;
	}

	/**
	 * Sets the document general local service.
	 *
	 * @param documentGeneralLocalService the document general local service
	 */
	public void setDocumentGeneralLocalService(
		DocumentGeneralLocalService documentGeneralLocalService) {
		this.documentGeneralLocalService = documentGeneralLocalService;
	}

	/**
	 * Returns the document general remote service.
	 *
	 * @return the document general remote service
	 */
	public DocumentGeneralService getDocumentGeneralService() {
		return documentGeneralService;
	}

	/**
	 * Sets the document general remote service.
	 *
	 * @param documentGeneralService the document general remote service
	 */
	public void setDocumentGeneralService(
		DocumentGeneralService documentGeneralService) {
		this.documentGeneralService = documentGeneralService;
	}

	/**
	 * Returns the document general persistence.
	 *
	 * @return the document general persistence
	 */
	public DocumentGeneralPersistence getDocumentGeneralPersistence() {
		return documentGeneralPersistence;
	}

	/**
	 * Sets the document general persistence.
	 *
	 * @param documentGeneralPersistence the document general persistence
	 */
	public void setDocumentGeneralPersistence(
		DocumentGeneralPersistence documentGeneralPersistence) {
		this.documentGeneralPersistence = documentGeneralPersistence;
	}

	/**
	 * Returns the passenger list local service.
	 *
	 * @return the passenger list local service
	 */
	public PassengerListLocalService getPassengerListLocalService() {
		return passengerListLocalService;
	}

	/**
	 * Sets the passenger list local service.
	 *
	 * @param passengerListLocalService the passenger list local service
	 */
	public void setPassengerListLocalService(
		PassengerListLocalService passengerListLocalService) {
		this.passengerListLocalService = passengerListLocalService;
	}

	/**
	 * Returns the passenger list remote service.
	 *
	 * @return the passenger list remote service
	 */
	public PassengerListService getPassengerListService() {
		return passengerListService;
	}

	/**
	 * Sets the passenger list remote service.
	 *
	 * @param passengerListService the passenger list remote service
	 */
	public void setPassengerListService(
		PassengerListService passengerListService) {
		this.passengerListService = passengerListService;
	}

	/**
	 * Returns the passenger list persistence.
	 *
	 * @return the passenger list persistence
	 */
	public PassengerListPersistence getPassengerListPersistence() {
		return passengerListPersistence;
	}

	/**
	 * Sets the passenger list persistence.
	 *
	 * @param passengerListPersistence the passenger list persistence
	 */
	public void setPassengerListPersistence(
		PassengerListPersistence passengerListPersistence) {
		this.passengerListPersistence = passengerListPersistence;
	}

	/**
	 * Returns the response bo local service.
	 *
	 * @return the response bo local service
	 */
	public ResponseBoLocalService getResponseBoLocalService() {
		return responseBoLocalService;
	}

	/**
	 * Sets the response bo local service.
	 *
	 * @param responseBoLocalService the response bo local service
	 */
	public void setResponseBoLocalService(
		ResponseBoLocalService responseBoLocalService) {
		this.responseBoLocalService = responseBoLocalService;
	}

	/**
	 * Returns the response bo remote service.
	 *
	 * @return the response bo remote service
	 */
	public ResponseBoService getResponseBoService() {
		return responseBoService;
	}

	/**
	 * Sets the response bo remote service.
	 *
	 * @param responseBoService the response bo remote service
	 */
	public void setResponseBoService(ResponseBoService responseBoService) {
		this.responseBoService = responseBoService;
	}

	/**
	 * Returns the response bo persistence.
	 *
	 * @return the response bo persistence
	 */
	public ResponseBoPersistence getResponseBoPersistence() {
		return responseBoPersistence;
	}

	/**
	 * Sets the response bo persistence.
	 *
	 * @param responseBoPersistence the response bo persistence
	 */
	public void setResponseBoPersistence(
		ResponseBoPersistence responseBoPersistence) {
		this.responseBoPersistence = responseBoPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Returns the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	protected Class<?> getModelClass() {
		return Document.class;
	}

	protected String getModelClassName() {
		return Document.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = documentPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = CrewListLocalService.class)
	protected CrewListLocalService crewListLocalService;
	@BeanReference(type = CrewListService.class)
	protected CrewListService crewListService;
	@BeanReference(type = CrewListPersistence.class)
	protected CrewListPersistence crewListPersistence;
	@BeanReference(type = DocumentLocalService.class)
	protected DocumentLocalService documentLocalService;
	@BeanReference(type = DocumentService.class)
	protected DocumentService documentService;
	@BeanReference(type = DocumentPersistence.class)
	protected DocumentPersistence documentPersistence;
	@BeanReference(type = DocumentGeneralLocalService.class)
	protected DocumentGeneralLocalService documentGeneralLocalService;
	@BeanReference(type = DocumentGeneralService.class)
	protected DocumentGeneralService documentGeneralService;
	@BeanReference(type = DocumentGeneralPersistence.class)
	protected DocumentGeneralPersistence documentGeneralPersistence;
	@BeanReference(type = PassengerListLocalService.class)
	protected PassengerListLocalService passengerListLocalService;
	@BeanReference(type = PassengerListService.class)
	protected PassengerListService passengerListService;
	@BeanReference(type = PassengerListPersistence.class)
	protected PassengerListPersistence passengerListPersistence;
	@BeanReference(type = ResponseBoLocalService.class)
	protected ResponseBoLocalService responseBoLocalService;
	@BeanReference(type = ResponseBoService.class)
	protected ResponseBoService responseBoService;
	@BeanReference(type = ResponseBoPersistence.class)
	protected ResponseBoPersistence responseBoPersistence;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
}
/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.nhapcanh.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.gt.dao.nhapcanh.model.PassengerList;
import vn.gt.dao.nhapcanh.model.PassengerListModel;
import vn.gt.dao.nhapcanh.model.PassengerListSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * The base model implementation for the PassengerList service. Represents a row in the &quot;passenger_list&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.gt.dao.nhapcanh.model.PassengerListModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PassengerListImpl}.
 * </p>
 *
 * @author win_64
 * @see PassengerListImpl
 * @see vn.gt.dao.nhapcanh.model.PassengerList
 * @see vn.gt.dao.nhapcanh.model.PassengerListModel
 * @generated
 */
@JSON(strict = true)
public class PassengerListModelImpl extends BaseModelImpl<PassengerList>
	implements PassengerListModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a passenger list model instance should use the {@link vn.gt.dao.nhapcanh.model.PassengerList} interface instead.
	 */
	public static final String TABLE_NAME = "passenger_list";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "passengercode", Types.VARCHAR },
			{ "documentno", Types.VARCHAR },
			{ "fullname", Types.VARCHAR },
			{ "statecode", Types.VARCHAR },
			{ "birthday", Types.TIMESTAMP },
			{ "birthplace", Types.VARCHAR },
			{ "passporttypecode", Types.VARCHAR },
			{ "passportno", Types.VARCHAR },
			{ "portcheckincode", Types.VARCHAR },
			{ "portcheckoutcode", Types.VARCHAR },
			{ "istransit", Types.BOOLEAN },
			{ "createdate", Types.TIMESTAMP },
			{ "modifydate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table passenger_list (id LONG not null primary key,passengercode VARCHAR(75) null,documentno VARCHAR(75) null,fullname VARCHAR(75) null,statecode VARCHAR(75) null,birthday DATE null,birthplace VARCHAR(75) null,passporttypecode VARCHAR(75) null,passportno VARCHAR(75) null,portcheckincode VARCHAR(75) null,portcheckoutcode VARCHAR(75) null,istransit BOOLEAN,createdate DATE null,modifydate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table passenger_list";
	public static final String ORDER_BY_JPQL = " ORDER BY passengerList.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY passenger_list.createdate ASC";
	public static final String DATA_SOURCE = "gtDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gt.dao.nhapcanh.model.PassengerList"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gt.dao.nhapcanh.model.PassengerList"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static PassengerList toModel(PassengerListSoap soapModel) {
		PassengerList model = new PassengerListImpl();

		model.setId(soapModel.getId());
		model.setPassengerCode(soapModel.getPassengerCode());
		model.setDocumentNo(soapModel.getDocumentNo());
		model.setFullName(soapModel.getFullName());
		model.setStateCode(soapModel.getStateCode());
		model.setBirthDay(soapModel.getBirthDay());
		model.setBirthPlace(soapModel.getBirthPlace());
		model.setPassportTypeCode(soapModel.getPassportTypeCode());
		model.setPassPortNo(soapModel.getPassPortNo());
		model.setPortCheckInCode(soapModel.getPortCheckInCode());
		model.setPortCheckOutCode(soapModel.getPortCheckOutCode());
		model.setIsTransit(soapModel.getIsTransit());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifyDate(soapModel.getModifyDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<PassengerList> toModels(PassengerListSoap[] soapModels) {
		List<PassengerList> models = new ArrayList<PassengerList>(soapModels.length);

		for (PassengerListSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.gt.dao.nhapcanh.model.PassengerList"));

	public PassengerListModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return PassengerList.class;
	}

	public String getModelClassName() {
		return PassengerList.class.getName();
	}

	@JSON
	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	@JSON
	public String getPassengerCode() {
		if (_passengerCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _passengerCode;
		}
	}

	public void setPassengerCode(String passengerCode) {
		_passengerCode = passengerCode;
	}

	@JSON
	public String getDocumentNo() {
		if (_documentNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _documentNo;
		}
	}

	public void setDocumentNo(String documentNo) {
		_documentNo = documentNo;
	}

	@JSON
	public String getFullName() {
		if (_fullName == null) {
			return StringPool.BLANK;
		}
		else {
			return _fullName;
		}
	}

	public void setFullName(String fullName) {
		_fullName = fullName;
	}

	@JSON
	public String getStateCode() {
		if (_stateCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _stateCode;
		}
	}

	public void setStateCode(String stateCode) {
		_stateCode = stateCode;
	}

	@JSON
	public Date getBirthDay() {
		return _birthDay;
	}

	public void setBirthDay(Date birthDay) {
		_birthDay = birthDay;
	}

	@JSON
	public String getBirthPlace() {
		if (_birthPlace == null) {
			return StringPool.BLANK;
		}
		else {
			return _birthPlace;
		}
	}

	public void setBirthPlace(String birthPlace) {
		_birthPlace = birthPlace;
	}

	@JSON
	public String getPassportTypeCode() {
		if (_passportTypeCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _passportTypeCode;
		}
	}

	public void setPassportTypeCode(String passportTypeCode) {
		_passportTypeCode = passportTypeCode;
	}

	@JSON
	public String getPassPortNo() {
		if (_passPortNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _passPortNo;
		}
	}

	public void setPassPortNo(String passPortNo) {
		_passPortNo = passPortNo;
	}

	@JSON
	public String getPortCheckInCode() {
		if (_portCheckInCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _portCheckInCode;
		}
	}

	public void setPortCheckInCode(String portCheckInCode) {
		_portCheckInCode = portCheckInCode;
	}

	@JSON
	public String getPortCheckOutCode() {
		if (_portCheckOutCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _portCheckOutCode;
		}
	}

	public void setPortCheckOutCode(String portCheckOutCode) {
		_portCheckOutCode = portCheckOutCode;
	}

	@JSON
	public boolean getIsTransit() {
		return _isTransit;
	}

	public boolean isIsTransit() {
		return _isTransit;
	}

	public void setIsTransit(boolean isTransit) {
		_isTransit = isTransit;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	public Date getModifyDate() {
		return _modifyDate;
	}

	public void setModifyDate(Date modifyDate) {
		_modifyDate = modifyDate;
	}

	@Override
	public PassengerList toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (PassengerList)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					PassengerList.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		PassengerListImpl passengerListImpl = new PassengerListImpl();

		passengerListImpl.setId(getId());
		passengerListImpl.setPassengerCode(getPassengerCode());
		passengerListImpl.setDocumentNo(getDocumentNo());
		passengerListImpl.setFullName(getFullName());
		passengerListImpl.setStateCode(getStateCode());
		passengerListImpl.setBirthDay(getBirthDay());
		passengerListImpl.setBirthPlace(getBirthPlace());
		passengerListImpl.setPassportTypeCode(getPassportTypeCode());
		passengerListImpl.setPassPortNo(getPassPortNo());
		passengerListImpl.setPortCheckInCode(getPortCheckInCode());
		passengerListImpl.setPortCheckOutCode(getPortCheckOutCode());
		passengerListImpl.setIsTransit(getIsTransit());
		passengerListImpl.setCreateDate(getCreateDate());
		passengerListImpl.setModifyDate(getModifyDate());

		passengerListImpl.resetOriginalValues();

		return passengerListImpl;
	}

	public int compareTo(PassengerList passengerList) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				passengerList.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		PassengerList passengerList = null;

		try {
			passengerList = (PassengerList)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = passengerList.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<PassengerList> toCacheModel() {
		PassengerListCacheModel passengerListCacheModel = new PassengerListCacheModel();

		passengerListCacheModel.id = getId();

		passengerListCacheModel.passengerCode = getPassengerCode();

		String passengerCode = passengerListCacheModel.passengerCode;

		if ((passengerCode != null) && (passengerCode.length() == 0)) {
			passengerListCacheModel.passengerCode = null;
		}

		passengerListCacheModel.documentNo = getDocumentNo();

		String documentNo = passengerListCacheModel.documentNo;

		if ((documentNo != null) && (documentNo.length() == 0)) {
			passengerListCacheModel.documentNo = null;
		}

		passengerListCacheModel.fullName = getFullName();

		String fullName = passengerListCacheModel.fullName;

		if ((fullName != null) && (fullName.length() == 0)) {
			passengerListCacheModel.fullName = null;
		}

		passengerListCacheModel.stateCode = getStateCode();

		String stateCode = passengerListCacheModel.stateCode;

		if ((stateCode != null) && (stateCode.length() == 0)) {
			passengerListCacheModel.stateCode = null;
		}

		Date birthDay = getBirthDay();

		if (birthDay != null) {
			passengerListCacheModel.birthDay = birthDay.getTime();
		}
		else {
			passengerListCacheModel.birthDay = Long.MIN_VALUE;
		}

		passengerListCacheModel.birthPlace = getBirthPlace();

		String birthPlace = passengerListCacheModel.birthPlace;

		if ((birthPlace != null) && (birthPlace.length() == 0)) {
			passengerListCacheModel.birthPlace = null;
		}

		passengerListCacheModel.passportTypeCode = getPassportTypeCode();

		String passportTypeCode = passengerListCacheModel.passportTypeCode;

		if ((passportTypeCode != null) && (passportTypeCode.length() == 0)) {
			passengerListCacheModel.passportTypeCode = null;
		}

		passengerListCacheModel.passPortNo = getPassPortNo();

		String passPortNo = passengerListCacheModel.passPortNo;

		if ((passPortNo != null) && (passPortNo.length() == 0)) {
			passengerListCacheModel.passPortNo = null;
		}

		passengerListCacheModel.portCheckInCode = getPortCheckInCode();

		String portCheckInCode = passengerListCacheModel.portCheckInCode;

		if ((portCheckInCode != null) && (portCheckInCode.length() == 0)) {
			passengerListCacheModel.portCheckInCode = null;
		}

		passengerListCacheModel.portCheckOutCode = getPortCheckOutCode();

		String portCheckOutCode = passengerListCacheModel.portCheckOutCode;

		if ((portCheckOutCode != null) && (portCheckOutCode.length() == 0)) {
			passengerListCacheModel.portCheckOutCode = null;
		}

		passengerListCacheModel.isTransit = getIsTransit();

		Date createDate = getCreateDate();

		if (createDate != null) {
			passengerListCacheModel.createDate = createDate.getTime();
		}
		else {
			passengerListCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifyDate = getModifyDate();

		if (modifyDate != null) {
			passengerListCacheModel.modifyDate = modifyDate.getTime();
		}
		else {
			passengerListCacheModel.modifyDate = Long.MIN_VALUE;
		}

		return passengerListCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", passengerCode=");
		sb.append(getPassengerCode());
		sb.append(", documentNo=");
		sb.append(getDocumentNo());
		sb.append(", fullName=");
		sb.append(getFullName());
		sb.append(", stateCode=");
		sb.append(getStateCode());
		sb.append(", birthDay=");
		sb.append(getBirthDay());
		sb.append(", birthPlace=");
		sb.append(getBirthPlace());
		sb.append(", passportTypeCode=");
		sb.append(getPassportTypeCode());
		sb.append(", passPortNo=");
		sb.append(getPassPortNo());
		sb.append(", portCheckInCode=");
		sb.append(getPortCheckInCode());
		sb.append(", portCheckOutCode=");
		sb.append(getPortCheckOutCode());
		sb.append(", isTransit=");
		sb.append(getIsTransit());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifyDate=");
		sb.append(getModifyDate());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("vn.gt.dao.nhapcanh.model.PassengerList");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passengerCode</column-name><column-value><![CDATA[");
		sb.append(getPassengerCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentNo</column-name><column-value><![CDATA[");
		sb.append(getDocumentNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fullName</column-name><column-value><![CDATA[");
		sb.append(getFullName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stateCode</column-name><column-value><![CDATA[");
		sb.append(getStateCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthDay</column-name><column-value><![CDATA[");
		sb.append(getBirthDay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthPlace</column-name><column-value><![CDATA[");
		sb.append(getBirthPlace());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passportTypeCode</column-name><column-value><![CDATA[");
		sb.append(getPassportTypeCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passPortNo</column-name><column-value><![CDATA[");
		sb.append(getPassPortNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>portCheckInCode</column-name><column-value><![CDATA[");
		sb.append(getPortCheckInCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>portCheckOutCode</column-name><column-value><![CDATA[");
		sb.append(getPortCheckOutCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isTransit</column-name><column-value><![CDATA[");
		sb.append(getIsTransit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyDate</column-name><column-value><![CDATA[");
		sb.append(getModifyDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PassengerList.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			PassengerList.class
		};
	private long _id;
	private String _passengerCode;
	private String _documentNo;
	private String _fullName;
	private String _stateCode;
	private Date _birthDay;
	private String _birthPlace;
	private String _passportTypeCode;
	private String _passPortNo;
	private String _portCheckInCode;
	private String _portCheckOutCode;
	private boolean _isTransit;
	private Date _createDate;
	private Date _modifyDate;
	private transient ExpandoBridge _expandoBridge;
	private PassengerList _escapedModelProxy;
}
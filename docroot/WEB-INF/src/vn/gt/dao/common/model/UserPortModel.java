/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.common.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the UserPort service. Represents a row in the &quot;user_port&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.gt.dao.common.model.impl.UserPortModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.gt.dao.common.model.impl.UserPortImpl}.
 * </p>
 *
 * @author win_64
 * @see UserPort
 * @see vn.gt.dao.common.model.impl.UserPortImpl
 * @see vn.gt.dao.common.model.impl.UserPortModelImpl
 * @generated
 */
public interface UserPortModel extends BaseModel<UserPort> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user port model instance should use the {@link UserPort} interface instead.
	 */

	/**
	 * Returns the primary key of this user port.
	 *
	 * @return the primary key of this user port
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this user port.
	 *
	 * @param primaryKey the primary key of this user port
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this user port.
	 *
	 * @return the ID of this user port
	 */
	public long getId();

	/**
	 * Sets the ID of this user port.
	 *
	 * @param id the ID of this user port
	 */
	public void setId(long id);

	/**
	 * Returns the port code of this user port.
	 *
	 * @return the port code of this user port
	 */
	@AutoEscape
	public String getPortCode();

	/**
	 * Sets the port code of this user port.
	 *
	 * @param portCode the port code of this user port
	 */
	public void setPortCode(String portCode);

	/**
	 * Returns the user ID of this user port.
	 *
	 * @return the user ID of this user port
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this user port.
	 *
	 * @param userId the user ID of this user port
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this user port.
	 *
	 * @return the user uuid of this user port
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this user port.
	 *
	 * @param userUuid the user uuid of this user port
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the create date of this user port.
	 *
	 * @return the create date of this user port
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this user port.
	 *
	 * @param createDate the create date of this user port
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the status of this user port.
	 *
	 * @return the status of this user port
	 */
	public int getStatus();

	/**
	 * Sets the status of this user port.
	 *
	 * @param status the status of this user port
	 */
	public void setStatus(int status);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(UserPort userPort);

	public int hashCode();

	public CacheModel<UserPort> toCacheModel();

	public UserPort toEscapedModel();

	public String toString();

	public String toXmlString();
}
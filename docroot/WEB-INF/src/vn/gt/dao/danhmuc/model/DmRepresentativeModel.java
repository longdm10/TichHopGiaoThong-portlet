/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.danhmuc.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DmRepresentative service. Represents a row in the &quot;DM_REPRESENTATIVE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.gt.dao.danhmuc.model.impl.DmRepresentativeModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.gt.dao.danhmuc.model.impl.DmRepresentativeImpl}.
 * </p>
 *
 * @author win_64
 * @see DmRepresentative
 * @see vn.gt.dao.danhmuc.model.impl.DmRepresentativeImpl
 * @see vn.gt.dao.danhmuc.model.impl.DmRepresentativeModelImpl
 * @generated
 */
public interface DmRepresentativeModel extends BaseModel<DmRepresentative> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dm representative model instance should use the {@link DmRepresentative} interface instead.
	 */

	/**
	 * Returns the primary key of this dm representative.
	 *
	 * @return the primary key of this dm representative
	 */
	public int getPrimaryKey();

	/**
	 * Sets the primary key of this dm representative.
	 *
	 * @param primaryKey the primary key of this dm representative
	 */
	public void setPrimaryKey(int primaryKey);

	/**
	 * Returns the ID of this dm representative.
	 *
	 * @return the ID of this dm representative
	 */
	public int getId();

	/**
	 * Sets the ID of this dm representative.
	 *
	 * @param id the ID of this dm representative
	 */
	public void setId(int id);

	/**
	 * Returns the rep code of this dm representative.
	 *
	 * @return the rep code of this dm representative
	 */
	@AutoEscape
	public String getRepCode();

	/**
	 * Sets the rep code of this dm representative.
	 *
	 * @param repCode the rep code of this dm representative
	 */
	public void setRepCode(String repCode);

	/**
	 * Returns the rep name of this dm representative.
	 *
	 * @return the rep name of this dm representative
	 */
	@AutoEscape
	public String getRepName();

	/**
	 * Sets the rep name of this dm representative.
	 *
	 * @param repName the rep name of this dm representative
	 */
	public void setRepName(String repName);

	/**
	 * Returns the rep name v n of this dm representative.
	 *
	 * @return the rep name v n of this dm representative
	 */
	@AutoEscape
	public String getRepNameVN();

	/**
	 * Sets the rep name v n of this dm representative.
	 *
	 * @param repNameVN the rep name v n of this dm representative
	 */
	public void setRepNameVN(String repNameVN);

	/**
	 * Returns the rep order of this dm representative.
	 *
	 * @return the rep order of this dm representative
	 */
	public int getRepOrder();

	/**
	 * Sets the rep order of this dm representative.
	 *
	 * @param repOrder the rep order of this dm representative
	 */
	public void setRepOrder(int repOrder);

	/**
	 * Returns the maritime code of this dm representative.
	 *
	 * @return the maritime code of this dm representative
	 */
	@AutoEscape
	public String getMaritimeCode();

	/**
	 * Sets the maritime code of this dm representative.
	 *
	 * @param maritimeCode the maritime code of this dm representative
	 */
	public void setMaritimeCode(String maritimeCode);

	/**
	 * Returns the is delete of this dm representative.
	 *
	 * @return the is delete of this dm representative
	 */
	public int getIsDelete();

	/**
	 * Sets the is delete of this dm representative.
	 *
	 * @param isDelete the is delete of this dm representative
	 */
	public void setIsDelete(int isDelete);

	/**
	 * Returns the marked as delete of this dm representative.
	 *
	 * @return the marked as delete of this dm representative
	 */
	public int getMarkedAsDelete();

	/**
	 * Sets the marked as delete of this dm representative.
	 *
	 * @param markedAsDelete the marked as delete of this dm representative
	 */
	public void setMarkedAsDelete(int markedAsDelete);

	/**
	 * Returns the modified date of this dm representative.
	 *
	 * @return the modified date of this dm representative
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this dm representative.
	 *
	 * @param modifiedDate the modified date of this dm representative
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the requested date of this dm representative.
	 *
	 * @return the requested date of this dm representative
	 */
	public Date getRequestedDate();

	/**
	 * Sets the requested date of this dm representative.
	 *
	 * @param requestedDate the requested date of this dm representative
	 */
	public void setRequestedDate(Date requestedDate);

	/**
	 * Returns the sync version of this dm representative.
	 *
	 * @return the sync version of this dm representative
	 */
	@AutoEscape
	public String getSyncVersion();

	/**
	 * Sets the sync version of this dm representative.
	 *
	 * @param syncVersion the sync version of this dm representative
	 */
	public void setSyncVersion(String syncVersion);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(DmRepresentative dmRepresentative);

	public int hashCode();

	public CacheModel<DmRepresentative> toCacheModel();

	public DmRepresentative toEscapedModel();

	public String toString();

	public String toXmlString();
}
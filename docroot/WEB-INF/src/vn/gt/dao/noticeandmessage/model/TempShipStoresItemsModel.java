/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.noticeandmessage.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the TempShipStoresItems service. Represents a row in the &quot;TEMP_SHIP_STORES_ITEMS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.gt.dao.noticeandmessage.model.impl.TempShipStoresItemsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.gt.dao.noticeandmessage.model.impl.TempShipStoresItemsImpl}.
 * </p>
 *
 * @author win_64
 * @see TempShipStoresItems
 * @see vn.gt.dao.noticeandmessage.model.impl.TempShipStoresItemsImpl
 * @see vn.gt.dao.noticeandmessage.model.impl.TempShipStoresItemsModelImpl
 * @generated
 */
public interface TempShipStoresItemsModel extends BaseModel<TempShipStoresItems> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a temp ship stores items model instance should use the {@link TempShipStoresItems} interface instead.
	 */

	/**
	 * Returns the primary key of this temp ship stores items.
	 *
	 * @return the primary key of this temp ship stores items
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this temp ship stores items.
	 *
	 * @param primaryKey the primary key of this temp ship stores items
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this temp ship stores items.
	 *
	 * @return the ID of this temp ship stores items
	 */
	public long getId();

	/**
	 * Sets the ID of this temp ship stores items.
	 *
	 * @param id the ID of this temp ship stores items
	 */
	public void setId(long id);

	/**
	 * Returns the request code of this temp ship stores items.
	 *
	 * @return the request code of this temp ship stores items
	 */
	@AutoEscape
	public String getRequestCode();

	/**
	 * Sets the request code of this temp ship stores items.
	 *
	 * @param requestCode the request code of this temp ship stores items
	 */
	public void setRequestCode(String requestCode);

	/**
	 * Returns the shipsstore item code of this temp ship stores items.
	 *
	 * @return the shipsstore item code of this temp ship stores items
	 */
	@AutoEscape
	public String getShipsstoreItemCode();

	/**
	 * Sets the shipsstore item code of this temp ship stores items.
	 *
	 * @param shipsstoreItemCode the shipsstore item code of this temp ship stores items
	 */
	public void setShipsstoreItemCode(String shipsstoreItemCode);

	/**
	 * Returns the name of article of this temp ship stores items.
	 *
	 * @return the name of article of this temp ship stores items
	 */
	@AutoEscape
	public String getNameOfArticle();

	/**
	 * Sets the name of article of this temp ship stores items.
	 *
	 * @param nameOfArticle the name of article of this temp ship stores items
	 */
	public void setNameOfArticle(String nameOfArticle);

	/**
	 * Returns the quantity of this temp ship stores items.
	 *
	 * @return the quantity of this temp ship stores items
	 */
	@AutoEscape
	public String getQuantity();

	/**
	 * Sets the quantity of this temp ship stores items.
	 *
	 * @param quantity the quantity of this temp ship stores items
	 */
	public void setQuantity(String quantity);

	/**
	 * Returns the quantity unit of this temp ship stores items.
	 *
	 * @return the quantity unit of this temp ship stores items
	 */
	@AutoEscape
	public String getQuantityUnit();

	/**
	 * Sets the quantity unit of this temp ship stores items.
	 *
	 * @param quantityUnit the quantity unit of this temp ship stores items
	 */
	public void setQuantityUnit(String quantityUnit);

	/**
	 * Returns the location on boat of this temp ship stores items.
	 *
	 * @return the location on boat of this temp ship stores items
	 */
	@AutoEscape
	public String getLocationOnBoat();

	/**
	 * Sets the location on boat of this temp ship stores items.
	 *
	 * @param locationOnBoat the location on boat of this temp ship stores items
	 */
	public void setLocationOnBoat(String locationOnBoat);

	/**
	 * Returns the use in boat of this temp ship stores items.
	 *
	 * @return the use in boat of this temp ship stores items
	 */
	public int getUseInBoat();

	/**
	 * Sets the use in boat of this temp ship stores items.
	 *
	 * @param useInBoat the use in boat of this temp ship stores items
	 */
	public void setUseInBoat(int useInBoat);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(TempShipStoresItems tempShipStoresItems);

	public int hashCode();

	public CacheModel<TempShipStoresItems> toCacheModel();

	public TempShipStoresItems toEscapedModel();

	public String toString();

	public String toXmlString();
}
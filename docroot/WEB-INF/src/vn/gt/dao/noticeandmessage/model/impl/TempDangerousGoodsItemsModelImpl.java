/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.noticeandmessage.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItems;
import vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItemsModel;
import vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItemsSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.List;

/**
 * The base model implementation for the TempDangerousGoodsItems service. Represents a row in the &quot;TEMP_DANGEROUS_GOODS_ITEMS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItemsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TempDangerousGoodsItemsImpl}.
 * </p>
 *
 * @author win_64
 * @see TempDangerousGoodsItemsImpl
 * @see vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItems
 * @see vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItemsModel
 * @generated
 */
@JSON(strict = true)
public class TempDangerousGoodsItemsModelImpl extends BaseModelImpl<TempDangerousGoodsItems>
	implements TempDangerousGoodsItemsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a temp dangerous goods items model instance should use the {@link vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItems} interface instead.
	 */
	public static final String TABLE_NAME = "TEMP_DANGEROUS_GOODS_ITEMS";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "RequestCode", Types.VARCHAR },
			{ "DangerousGoodItemCode", Types.VARCHAR },
			{ "RefNumber", Types.VARCHAR },
			{ "MarksContainer", Types.VARCHAR },
			{ "NumberContainer", Types.VARCHAR },
			{ "NumberOfPackage", Types.VARCHAR },
			{ "KindOfPackages", Types.VARCHAR },
			{ "ProperShippingName", Types.VARCHAR },
			{ "GoodClass", Types.VARCHAR },
			{ "UNNumber", Types.VARCHAR },
			{ "PackingGroup", Types.VARCHAR },
			{ "SubsidiaryRisk", Types.VARCHAR },
			{ "FlashPoint", Types.VARCHAR },
			{ "MarinePollutant", Types.VARCHAR },
			{ "GrossWeight", Types.BIGINT },
			{ "Ems", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table TEMP_DANGEROUS_GOODS_ITEMS (ID LONG not null primary key,RequestCode VARCHAR(75) null,DangerousGoodItemCode VARCHAR(75) null,RefNumber VARCHAR(75) null,MarksContainer VARCHAR(75) null,NumberContainer VARCHAR(75) null,NumberOfPackage VARCHAR(75) null,KindOfPackages VARCHAR(75) null,ProperShippingName VARCHAR(75) null,GoodClass VARCHAR(75) null,UNNumber VARCHAR(75) null,PackingGroup VARCHAR(75) null,SubsidiaryRisk VARCHAR(75) null,FlashPoint VARCHAR(75) null,MarinePollutant VARCHAR(75) null,GrossWeight LONG,Ems VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table TEMP_DANGEROUS_GOODS_ITEMS";
	public static final String ORDER_BY_JPQL = " ORDER BY tempDangerousGoodsItems.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY TEMP_DANGEROUS_GOODS_ITEMS.ID ASC";
	public static final String DATA_SOURCE = "gtDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItems"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItems"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItems"),
			true);
	public static long REQUESTCODE_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TempDangerousGoodsItems toModel(
		TempDangerousGoodsItemsSoap soapModel) {
		TempDangerousGoodsItems model = new TempDangerousGoodsItemsImpl();

		model.setId(soapModel.getId());
		model.setRequestCode(soapModel.getRequestCode());
		model.setDangerousGoodItemCode(soapModel.getDangerousGoodItemCode());
		model.setRefNumber(soapModel.getRefNumber());
		model.setMarksContainer(soapModel.getMarksContainer());
		model.setNumberContainer(soapModel.getNumberContainer());
		model.setNumberOfPackage(soapModel.getNumberOfPackage());
		model.setKindOfPackages(soapModel.getKindOfPackages());
		model.setProperShippingName(soapModel.getProperShippingName());
		model.setGoodClass(soapModel.getGoodClass());
		model.setUnNumber(soapModel.getUnNumber());
		model.setPackingGroup(soapModel.getPackingGroup());
		model.setSubsidiaryRisk(soapModel.getSubsidiaryRisk());
		model.setFlashPoint(soapModel.getFlashPoint());
		model.setMarinePollutant(soapModel.getMarinePollutant());
		model.setGrossWeight(soapModel.getGrossWeight());
		model.setEms(soapModel.getEms());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TempDangerousGoodsItems> toModels(
		TempDangerousGoodsItemsSoap[] soapModels) {
		List<TempDangerousGoodsItems> models = new ArrayList<TempDangerousGoodsItems>(soapModels.length);

		for (TempDangerousGoodsItemsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItems"));

	public TempDangerousGoodsItemsModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return TempDangerousGoodsItems.class;
	}

	public String getModelClassName() {
		return TempDangerousGoodsItems.class.getName();
	}

	@JSON
	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@JSON
	public String getRequestCode() {
		if (_requestCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _requestCode;
		}
	}

	public void setRequestCode(String requestCode) {
		_columnBitmask |= REQUESTCODE_COLUMN_BITMASK;

		if (_originalRequestCode == null) {
			_originalRequestCode = _requestCode;
		}

		_requestCode = requestCode;
	}

	public String getOriginalRequestCode() {
		return GetterUtil.getString(_originalRequestCode);
	}

	@JSON
	public String getDangerousGoodItemCode() {
		if (_dangerousGoodItemCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _dangerousGoodItemCode;
		}
	}

	public void setDangerousGoodItemCode(String dangerousGoodItemCode) {
		_dangerousGoodItemCode = dangerousGoodItemCode;
	}

	@JSON
	public String getRefNumber() {
		if (_refNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _refNumber;
		}
	}

	public void setRefNumber(String refNumber) {
		_refNumber = refNumber;
	}

	@JSON
	public String getMarksContainer() {
		if (_marksContainer == null) {
			return StringPool.BLANK;
		}
		else {
			return _marksContainer;
		}
	}

	public void setMarksContainer(String marksContainer) {
		_marksContainer = marksContainer;
	}

	@JSON
	public String getNumberContainer() {
		if (_numberContainer == null) {
			return StringPool.BLANK;
		}
		else {
			return _numberContainer;
		}
	}

	public void setNumberContainer(String numberContainer) {
		_numberContainer = numberContainer;
	}

	@JSON
	public String getNumberOfPackage() {
		if (_numberOfPackage == null) {
			return StringPool.BLANK;
		}
		else {
			return _numberOfPackage;
		}
	}

	public void setNumberOfPackage(String numberOfPackage) {
		_numberOfPackage = numberOfPackage;
	}

	@JSON
	public String getKindOfPackages() {
		if (_kindOfPackages == null) {
			return StringPool.BLANK;
		}
		else {
			return _kindOfPackages;
		}
	}

	public void setKindOfPackages(String kindOfPackages) {
		_kindOfPackages = kindOfPackages;
	}

	@JSON
	public String getProperShippingName() {
		if (_properShippingName == null) {
			return StringPool.BLANK;
		}
		else {
			return _properShippingName;
		}
	}

	public void setProperShippingName(String properShippingName) {
		_properShippingName = properShippingName;
	}

	@JSON
	public String getGoodClass() {
		if (_goodClass == null) {
			return StringPool.BLANK;
		}
		else {
			return _goodClass;
		}
	}

	public void setGoodClass(String goodClass) {
		_goodClass = goodClass;
	}

	@JSON
	public String getUnNumber() {
		if (_unNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _unNumber;
		}
	}

	public void setUnNumber(String unNumber) {
		_unNumber = unNumber;
	}

	@JSON
	public String getPackingGroup() {
		if (_packingGroup == null) {
			return StringPool.BLANK;
		}
		else {
			return _packingGroup;
		}
	}

	public void setPackingGroup(String packingGroup) {
		_packingGroup = packingGroup;
	}

	@JSON
	public String getSubsidiaryRisk() {
		if (_subsidiaryRisk == null) {
			return StringPool.BLANK;
		}
		else {
			return _subsidiaryRisk;
		}
	}

	public void setSubsidiaryRisk(String subsidiaryRisk) {
		_subsidiaryRisk = subsidiaryRisk;
	}

	@JSON
	public String getFlashPoint() {
		if (_flashPoint == null) {
			return StringPool.BLANK;
		}
		else {
			return _flashPoint;
		}
	}

	public void setFlashPoint(String flashPoint) {
		_flashPoint = flashPoint;
	}

	@JSON
	public String getMarinePollutant() {
		if (_marinePollutant == null) {
			return StringPool.BLANK;
		}
		else {
			return _marinePollutant;
		}
	}

	public void setMarinePollutant(String marinePollutant) {
		_marinePollutant = marinePollutant;
	}

	@JSON
	public long getGrossWeight() {
		return _grossWeight;
	}

	public void setGrossWeight(long grossWeight) {
		_grossWeight = grossWeight;
	}

	@JSON
	public String getEms() {
		if (_ems == null) {
			return StringPool.BLANK;
		}
		else {
			return _ems;
		}
	}

	public void setEms(String ems) {
		_ems = ems;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public TempDangerousGoodsItems toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (TempDangerousGoodsItems)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					TempDangerousGoodsItems.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		TempDangerousGoodsItemsImpl tempDangerousGoodsItemsImpl = new TempDangerousGoodsItemsImpl();

		tempDangerousGoodsItemsImpl.setId(getId());
		tempDangerousGoodsItemsImpl.setRequestCode(getRequestCode());
		tempDangerousGoodsItemsImpl.setDangerousGoodItemCode(getDangerousGoodItemCode());
		tempDangerousGoodsItemsImpl.setRefNumber(getRefNumber());
		tempDangerousGoodsItemsImpl.setMarksContainer(getMarksContainer());
		tempDangerousGoodsItemsImpl.setNumberContainer(getNumberContainer());
		tempDangerousGoodsItemsImpl.setNumberOfPackage(getNumberOfPackage());
		tempDangerousGoodsItemsImpl.setKindOfPackages(getKindOfPackages());
		tempDangerousGoodsItemsImpl.setProperShippingName(getProperShippingName());
		tempDangerousGoodsItemsImpl.setGoodClass(getGoodClass());
		tempDangerousGoodsItemsImpl.setUnNumber(getUnNumber());
		tempDangerousGoodsItemsImpl.setPackingGroup(getPackingGroup());
		tempDangerousGoodsItemsImpl.setSubsidiaryRisk(getSubsidiaryRisk());
		tempDangerousGoodsItemsImpl.setFlashPoint(getFlashPoint());
		tempDangerousGoodsItemsImpl.setMarinePollutant(getMarinePollutant());
		tempDangerousGoodsItemsImpl.setGrossWeight(getGrossWeight());
		tempDangerousGoodsItemsImpl.setEms(getEms());

		tempDangerousGoodsItemsImpl.resetOriginalValues();

		return tempDangerousGoodsItemsImpl;
	}

	public int compareTo(TempDangerousGoodsItems tempDangerousGoodsItems) {
		int value = 0;

		if (getId() < tempDangerousGoodsItems.getId()) {
			value = -1;
		}
		else if (getId() > tempDangerousGoodsItems.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		TempDangerousGoodsItems tempDangerousGoodsItems = null;

		try {
			tempDangerousGoodsItems = (TempDangerousGoodsItems)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = tempDangerousGoodsItems.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TempDangerousGoodsItemsModelImpl tempDangerousGoodsItemsModelImpl = this;

		tempDangerousGoodsItemsModelImpl._originalRequestCode = tempDangerousGoodsItemsModelImpl._requestCode;

		tempDangerousGoodsItemsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TempDangerousGoodsItems> toCacheModel() {
		TempDangerousGoodsItemsCacheModel tempDangerousGoodsItemsCacheModel = new TempDangerousGoodsItemsCacheModel();

		tempDangerousGoodsItemsCacheModel.id = getId();

		tempDangerousGoodsItemsCacheModel.requestCode = getRequestCode();

		String requestCode = tempDangerousGoodsItemsCacheModel.requestCode;

		if ((requestCode != null) && (requestCode.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.requestCode = null;
		}

		tempDangerousGoodsItemsCacheModel.dangerousGoodItemCode = getDangerousGoodItemCode();

		String dangerousGoodItemCode = tempDangerousGoodsItemsCacheModel.dangerousGoodItemCode;

		if ((dangerousGoodItemCode != null) &&
				(dangerousGoodItemCode.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.dangerousGoodItemCode = null;
		}

		tempDangerousGoodsItemsCacheModel.refNumber = getRefNumber();

		String refNumber = tempDangerousGoodsItemsCacheModel.refNumber;

		if ((refNumber != null) && (refNumber.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.refNumber = null;
		}

		tempDangerousGoodsItemsCacheModel.marksContainer = getMarksContainer();

		String marksContainer = tempDangerousGoodsItemsCacheModel.marksContainer;

		if ((marksContainer != null) && (marksContainer.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.marksContainer = null;
		}

		tempDangerousGoodsItemsCacheModel.numberContainer = getNumberContainer();

		String numberContainer = tempDangerousGoodsItemsCacheModel.numberContainer;

		if ((numberContainer != null) && (numberContainer.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.numberContainer = null;
		}

		tempDangerousGoodsItemsCacheModel.numberOfPackage = getNumberOfPackage();

		String numberOfPackage = tempDangerousGoodsItemsCacheModel.numberOfPackage;

		if ((numberOfPackage != null) && (numberOfPackage.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.numberOfPackage = null;
		}

		tempDangerousGoodsItemsCacheModel.kindOfPackages = getKindOfPackages();

		String kindOfPackages = tempDangerousGoodsItemsCacheModel.kindOfPackages;

		if ((kindOfPackages != null) && (kindOfPackages.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.kindOfPackages = null;
		}

		tempDangerousGoodsItemsCacheModel.properShippingName = getProperShippingName();

		String properShippingName = tempDangerousGoodsItemsCacheModel.properShippingName;

		if ((properShippingName != null) && (properShippingName.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.properShippingName = null;
		}

		tempDangerousGoodsItemsCacheModel.goodClass = getGoodClass();

		String goodClass = tempDangerousGoodsItemsCacheModel.goodClass;

		if ((goodClass != null) && (goodClass.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.goodClass = null;
		}

		tempDangerousGoodsItemsCacheModel.unNumber = getUnNumber();

		String unNumber = tempDangerousGoodsItemsCacheModel.unNumber;

		if ((unNumber != null) && (unNumber.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.unNumber = null;
		}

		tempDangerousGoodsItemsCacheModel.packingGroup = getPackingGroup();

		String packingGroup = tempDangerousGoodsItemsCacheModel.packingGroup;

		if ((packingGroup != null) && (packingGroup.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.packingGroup = null;
		}

		tempDangerousGoodsItemsCacheModel.subsidiaryRisk = getSubsidiaryRisk();

		String subsidiaryRisk = tempDangerousGoodsItemsCacheModel.subsidiaryRisk;

		if ((subsidiaryRisk != null) && (subsidiaryRisk.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.subsidiaryRisk = null;
		}

		tempDangerousGoodsItemsCacheModel.flashPoint = getFlashPoint();

		String flashPoint = tempDangerousGoodsItemsCacheModel.flashPoint;

		if ((flashPoint != null) && (flashPoint.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.flashPoint = null;
		}

		tempDangerousGoodsItemsCacheModel.marinePollutant = getMarinePollutant();

		String marinePollutant = tempDangerousGoodsItemsCacheModel.marinePollutant;

		if ((marinePollutant != null) && (marinePollutant.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.marinePollutant = null;
		}

		tempDangerousGoodsItemsCacheModel.grossWeight = getGrossWeight();

		tempDangerousGoodsItemsCacheModel.ems = getEms();

		String ems = tempDangerousGoodsItemsCacheModel.ems;

		if ((ems != null) && (ems.length() == 0)) {
			tempDangerousGoodsItemsCacheModel.ems = null;
		}

		return tempDangerousGoodsItemsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", requestCode=");
		sb.append(getRequestCode());
		sb.append(", dangerousGoodItemCode=");
		sb.append(getDangerousGoodItemCode());
		sb.append(", refNumber=");
		sb.append(getRefNumber());
		sb.append(", marksContainer=");
		sb.append(getMarksContainer());
		sb.append(", numberContainer=");
		sb.append(getNumberContainer());
		sb.append(", numberOfPackage=");
		sb.append(getNumberOfPackage());
		sb.append(", kindOfPackages=");
		sb.append(getKindOfPackages());
		sb.append(", properShippingName=");
		sb.append(getProperShippingName());
		sb.append(", goodClass=");
		sb.append(getGoodClass());
		sb.append(", unNumber=");
		sb.append(getUnNumber());
		sb.append(", packingGroup=");
		sb.append(getPackingGroup());
		sb.append(", subsidiaryRisk=");
		sb.append(getSubsidiaryRisk());
		sb.append(", flashPoint=");
		sb.append(getFlashPoint());
		sb.append(", marinePollutant=");
		sb.append(getMarinePollutant());
		sb.append(", grossWeight=");
		sb.append(getGrossWeight());
		sb.append(", ems=");
		sb.append(getEms());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("vn.gt.dao.noticeandmessage.model.TempDangerousGoodsItems");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestCode</column-name><column-value><![CDATA[");
		sb.append(getRequestCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dangerousGoodItemCode</column-name><column-value><![CDATA[");
		sb.append(getDangerousGoodItemCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>refNumber</column-name><column-value><![CDATA[");
		sb.append(getRefNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>marksContainer</column-name><column-value><![CDATA[");
		sb.append(getMarksContainer());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numberContainer</column-name><column-value><![CDATA[");
		sb.append(getNumberContainer());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numberOfPackage</column-name><column-value><![CDATA[");
		sb.append(getNumberOfPackage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>kindOfPackages</column-name><column-value><![CDATA[");
		sb.append(getKindOfPackages());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>properShippingName</column-name><column-value><![CDATA[");
		sb.append(getProperShippingName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>goodClass</column-name><column-value><![CDATA[");
		sb.append(getGoodClass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>unNumber</column-name><column-value><![CDATA[");
		sb.append(getUnNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>packingGroup</column-name><column-value><![CDATA[");
		sb.append(getPackingGroup());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subsidiaryRisk</column-name><column-value><![CDATA[");
		sb.append(getSubsidiaryRisk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>flashPoint</column-name><column-value><![CDATA[");
		sb.append(getFlashPoint());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>marinePollutant</column-name><column-value><![CDATA[");
		sb.append(getMarinePollutant());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>grossWeight</column-name><column-value><![CDATA[");
		sb.append(getGrossWeight());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ems</column-name><column-value><![CDATA[");
		sb.append(getEms());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TempDangerousGoodsItems.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			TempDangerousGoodsItems.class
		};
	private long _id;
	private String _requestCode;
	private String _originalRequestCode;
	private String _dangerousGoodItemCode;
	private String _refNumber;
	private String _marksContainer;
	private String _numberContainer;
	private String _numberOfPackage;
	private String _kindOfPackages;
	private String _properShippingName;
	private String _goodClass;
	private String _unNumber;
	private String _packingGroup;
	private String _subsidiaryRisk;
	private String _flashPoint;
	private String _marinePollutant;
	private long _grossWeight;
	private String _ems;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private TempDangerousGoodsItems _escapedModelProxy;
}
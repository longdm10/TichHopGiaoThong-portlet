/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.noticeandmessage.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the TempUnitGeneral service. Represents a row in the &quot;TEMP_UNIT_GENERAL&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.gt.dao.noticeandmessage.model.impl.TempUnitGeneralModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.gt.dao.noticeandmessage.model.impl.TempUnitGeneralImpl}.
 * </p>
 *
 * @author win_64
 * @see TempUnitGeneral
 * @see vn.gt.dao.noticeandmessage.model.impl.TempUnitGeneralImpl
 * @see vn.gt.dao.noticeandmessage.model.impl.TempUnitGeneralModelImpl
 * @generated
 */
public interface TempUnitGeneralModel extends BaseModel<TempUnitGeneral> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a temp unit general model instance should use the {@link TempUnitGeneral} interface instead.
	 */

	/**
	 * Returns the primary key of this temp unit general.
	 *
	 * @return the primary key of this temp unit general
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this temp unit general.
	 *
	 * @param primaryKey the primary key of this temp unit general
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this temp unit general.
	 *
	 * @return the ID of this temp unit general
	 */
	public long getId();

	/**
	 * Sets the ID of this temp unit general.
	 *
	 * @param id the ID of this temp unit general
	 */
	public void setId(long id);

	/**
	 * Returns the request code of this temp unit general.
	 *
	 * @return the request code of this temp unit general
	 */
	@AutoEscape
	public String getRequestCode();

	/**
	 * Sets the request code of this temp unit general.
	 *
	 * @param requestCode the request code of this temp unit general
	 */
	public void setRequestCode(String requestCode);

	/**
	 * Returns the document name of this temp unit general.
	 *
	 * @return the document name of this temp unit general
	 */
	public long getDocumentName();

	/**
	 * Sets the document name of this temp unit general.
	 *
	 * @param documentName the document name of this temp unit general
	 */
	public void setDocumentName(long documentName);

	/**
	 * Returns the document year of this temp unit general.
	 *
	 * @return the document year of this temp unit general
	 */
	public int getDocumentYear();

	/**
	 * Sets the document year of this temp unit general.
	 *
	 * @param documentYear the document year of this temp unit general
	 */
	public void setDocumentYear(int documentYear);

	/**
	 * Returns the gross tonnage unit of this temp unit general.
	 *
	 * @return the gross tonnage unit of this temp unit general
	 */
	@AutoEscape
	public String getGrossTonnageUnit();

	/**
	 * Sets the gross tonnage unit of this temp unit general.
	 *
	 * @param grossTonnageUnit the gross tonnage unit of this temp unit general
	 */
	public void setGrossTonnageUnit(String grossTonnageUnit);

	/**
	 * Returns the net tonnage unit of this temp unit general.
	 *
	 * @return the net tonnage unit of this temp unit general
	 */
	@AutoEscape
	public String getNetTonnageUnit();

	/**
	 * Sets the net tonnage unit of this temp unit general.
	 *
	 * @param netTonnageUnit the net tonnage unit of this temp unit general
	 */
	public void setNetTonnageUnit(String netTonnageUnit);

	/**
	 * Returns the unit d w t of this temp unit general.
	 *
	 * @return the unit d w t of this temp unit general
	 */
	@AutoEscape
	public String getUnitDWT();

	/**
	 * Sets the unit d w t of this temp unit general.
	 *
	 * @param unitDWT the unit d w t of this temp unit general
	 */
	public void setUnitDWT(String unitDWT);

	/**
	 * Returns the unit l o a of this temp unit general.
	 *
	 * @return the unit l o a of this temp unit general
	 */
	@AutoEscape
	public String getUnitLOA();

	/**
	 * Sets the unit l o a of this temp unit general.
	 *
	 * @param unitLOA the unit l o a of this temp unit general
	 */
	public void setUnitLOA(String unitLOA);

	/**
	 * Returns the unit breadth of this temp unit general.
	 *
	 * @return the unit breadth of this temp unit general
	 */
	@AutoEscape
	public String getUnitBreadth();

	/**
	 * Sets the unit breadth of this temp unit general.
	 *
	 * @param unitBreadth the unit breadth of this temp unit general
	 */
	public void setUnitBreadth(String unitBreadth);

	/**
	 * Returns the unit clearance height of this temp unit general.
	 *
	 * @return the unit clearance height of this temp unit general
	 */
	@AutoEscape
	public String getUnitClearanceHeight();

	/**
	 * Sets the unit clearance height of this temp unit general.
	 *
	 * @param unitClearanceHeight the unit clearance height of this temp unit general
	 */
	public void setUnitClearanceHeight(String unitClearanceHeight);

	/**
	 * Returns the unit shown draft of this temp unit general.
	 *
	 * @return the unit shown draft of this temp unit general
	 */
	@AutoEscape
	public String getUnitShownDraft();

	/**
	 * Sets the unit shown draft of this temp unit general.
	 *
	 * @param unitShownDraft the unit shown draft of this temp unit general
	 */
	public void setUnitShownDraft(String unitShownDraft);

	/**
	 * Returns the unit shown draftx f of this temp unit general.
	 *
	 * @return the unit shown draftx f of this temp unit general
	 */
	@AutoEscape
	public String getUnitShownDraftxF();

	/**
	 * Sets the unit shown draftx f of this temp unit general.
	 *
	 * @param unitShownDraftxF the unit shown draftx f of this temp unit general
	 */
	public void setUnitShownDraftxF(String unitShownDraftxF);

	/**
	 * Returns the unit shown draftx a of this temp unit general.
	 *
	 * @return the unit shown draftx a of this temp unit general
	 */
	@AutoEscape
	public String getUnitShownDraftxA();

	/**
	 * Sets the unit shown draftx a of this temp unit general.
	 *
	 * @param unitShownDraftxA the unit shown draftx a of this temp unit general
	 */
	public void setUnitShownDraftxA(String unitShownDraftxA);

	/**
	 * Returns the unit horse power of this temp unit general.
	 *
	 * @return the unit horse power of this temp unit general
	 */
	@AutoEscape
	public String getUnitHorsePower();

	/**
	 * Sets the unit horse power of this temp unit general.
	 *
	 * @param unitHorsePower the unit horse power of this temp unit general
	 */
	public void setUnitHorsePower(String unitHorsePower);

	/**
	 * Returns the unit remaining on boardx b of this temp unit general.
	 *
	 * @return the unit remaining on boardx b of this temp unit general
	 */
	@AutoEscape
	public String getUnitRemainingOnBoardxB();

	/**
	 * Sets the unit remaining on boardx b of this temp unit general.
	 *
	 * @param unitRemainingOnBoardxB the unit remaining on boardx b of this temp unit general
	 */
	public void setUnitRemainingOnBoardxB(String unitRemainingOnBoardxB);

	/**
	 * Returns the unit remaining on boardx s of this temp unit general.
	 *
	 * @return the unit remaining on boardx s of this temp unit general
	 */
	@AutoEscape
	public String getUnitRemainingOnBoardxS();

	/**
	 * Sets the unit remaining on boardx s of this temp unit general.
	 *
	 * @param unitRemainingOnBoardxS the unit remaining on boardx s of this temp unit general
	 */
	public void setUnitRemainingOnBoardxS(String unitRemainingOnBoardxS);

	/**
	 * Returns the unit f o of this temp unit general.
	 *
	 * @return the unit f o of this temp unit general
	 */
	@AutoEscape
	public String getUnitFO();

	/**
	 * Sets the unit f o of this temp unit general.
	 *
	 * @param unitFO the unit f o of this temp unit general
	 */
	public void setUnitFO(String unitFO);

	/**
	 * Returns the unit l o of this temp unit general.
	 *
	 * @return the unit l o of this temp unit general
	 */
	@AutoEscape
	public String getUnitLO();

	/**
	 * Sets the unit l o of this temp unit general.
	 *
	 * @param unitLO the unit l o of this temp unit general
	 */
	public void setUnitLO(String unitLO);

	/**
	 * Returns the unit f w of this temp unit general.
	 *
	 * @return the unit f w of this temp unit general
	 */
	@AutoEscape
	public String getUnitFW();

	/**
	 * Sets the unit f w of this temp unit general.
	 *
	 * @param unitFW the unit f w of this temp unit general
	 */
	public void setUnitFW(String unitFW);

	/**
	 * Returns the unit d o of this temp unit general.
	 *
	 * @return the unit d o of this temp unit general
	 */
	@AutoEscape
	public String getUnitDO();

	/**
	 * Sets the unit d o of this temp unit general.
	 *
	 * @param unitDO the unit d o of this temp unit general
	 */
	public void setUnitDO(String unitDO);

	/**
	 * Returns the unit sludge oil of this temp unit general.
	 *
	 * @return the unit sludge oil of this temp unit general
	 */
	@AutoEscape
	public String getUnitSludgeOil();

	/**
	 * Sets the unit sludge oil of this temp unit general.
	 *
	 * @param unitSludgeOil the unit sludge oil of this temp unit general
	 */
	public void setUnitSludgeOil(String unitSludgeOil);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(TempUnitGeneral tempUnitGeneral);

	public int hashCode();

	public CacheModel<TempUnitGeneral> toCacheModel();

	public TempUnitGeneral toEscapedModel();

	public String toString();

	public String toXmlString();
}
/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.danhmucgt.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DmCertificate service. Represents a row in the &quot;DM_CERTIFICATE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.gt.dao.danhmucgt.model.impl.DmCertificateModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.gt.dao.danhmucgt.model.impl.DmCertificateImpl}.
 * </p>
 *
 * @author win_64
 * @see DmCertificate
 * @see vn.gt.dao.danhmucgt.model.impl.DmCertificateImpl
 * @see vn.gt.dao.danhmucgt.model.impl.DmCertificateModelImpl
 * @generated
 */
public interface DmCertificateModel extends BaseModel<DmCertificate> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dm certificate model instance should use the {@link DmCertificate} interface instead.
	 */

	/**
	 * Returns the primary key of this dm certificate.
	 *
	 * @return the primary key of this dm certificate
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this dm certificate.
	 *
	 * @param primaryKey the primary key of this dm certificate
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this dm certificate.
	 *
	 * @return the ID of this dm certificate
	 */
	public long getId();

	/**
	 * Sets the ID of this dm certificate.
	 *
	 * @param id the ID of this dm certificate
	 */
	public void setId(long id);

	/**
	 * Returns the certificate code of this dm certificate.
	 *
	 * @return the certificate code of this dm certificate
	 */
	@AutoEscape
	public String getCertificateCode();

	/**
	 * Sets the certificate code of this dm certificate.
	 *
	 * @param certificateCode the certificate code of this dm certificate
	 */
	public void setCertificateCode(String certificateCode);

	/**
	 * Returns the certificate name of this dm certificate.
	 *
	 * @return the certificate name of this dm certificate
	 */
	@AutoEscape
	public String getCertificateName();

	/**
	 * Sets the certificate name of this dm certificate.
	 *
	 * @param certificateName the certificate name of this dm certificate
	 */
	public void setCertificateName(String certificateName);

	/**
	 * Returns the certificate name v n of this dm certificate.
	 *
	 * @return the certificate name v n of this dm certificate
	 */
	@AutoEscape
	public String getCertificateNameVN();

	/**
	 * Sets the certificate name v n of this dm certificate.
	 *
	 * @param certificateNameVN the certificate name v n of this dm certificate
	 */
	public void setCertificateNameVN(String certificateNameVN);

	/**
	 * Returns the certificate order of this dm certificate.
	 *
	 * @return the certificate order of this dm certificate
	 */
	public int getCertificateOrder();

	/**
	 * Sets the certificate order of this dm certificate.
	 *
	 * @param certificateOrder the certificate order of this dm certificate
	 */
	public void setCertificateOrder(int certificateOrder);

	/**
	 * Returns the is delete of this dm certificate.
	 *
	 * @return the is delete of this dm certificate
	 */
	public int getIsDelete();

	/**
	 * Sets the is delete of this dm certificate.
	 *
	 * @param isDelete the is delete of this dm certificate
	 */
	public void setIsDelete(int isDelete);

	/**
	 * Returns the marked as delete of this dm certificate.
	 *
	 * @return the marked as delete of this dm certificate
	 */
	public int getMarkedAsDelete();

	/**
	 * Sets the marked as delete of this dm certificate.
	 *
	 * @param markedAsDelete the marked as delete of this dm certificate
	 */
	public void setMarkedAsDelete(int markedAsDelete);

	/**
	 * Returns the modified date of this dm certificate.
	 *
	 * @return the modified date of this dm certificate
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this dm certificate.
	 *
	 * @param modifiedDate the modified date of this dm certificate
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the requested date of this dm certificate.
	 *
	 * @return the requested date of this dm certificate
	 */
	public Date getRequestedDate();

	/**
	 * Sets the requested date of this dm certificate.
	 *
	 * @param requestedDate the requested date of this dm certificate
	 */
	public void setRequestedDate(Date requestedDate);

	/**
	 * Returns the sync version of this dm certificate.
	 *
	 * @return the sync version of this dm certificate
	 */
	@AutoEscape
	public String getSyncVersion();

	/**
	 * Sets the sync version of this dm certificate.
	 *
	 * @param syncVersion the sync version of this dm certificate
	 */
	public void setSyncVersion(String syncVersion);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(DmCertificate dmCertificate);

	public int hashCode();

	public CacheModel<DmCertificate> toCacheModel();

	public DmCertificate toEscapedModel();

	public String toString();

	public String toXmlString();
}